1) sine and cosine are in radians
2) memset can be whack sometimes
3) & for changing vector and making copy much faster!
4) array is always changed when passing into function
5) (long long) (i * i) = casting
6) while (cin >> x) or while (~scanf("%d, &n)) ~ is != -1
to read till EOF = while (scanf("%d, &n) != EOF //!= -1)
7)   map<int, pair<int, int> > moves = {{8, {1, 0}}, {6, {0, 1}}, {2, {-1, 0}}, {4, {0, -1}},
                                        {9, {1, 1}}, {3, {1, -1}}, {1, {-1, -1}}, {7, {-1, 1}}};
8) for (auto it: map) cout << it.first << endl;
9) Priority_queue is max pq!!!
10) scanf("%1d", &mapa[i][j]); //reads in 1 digit
11) Array: rotate(A, A + 1, A + N);
12) sorting with lambdas 
sort(PI.begin(), PI.end(), [&](int x, int y) {
    return Q[x] < Q[y];
 });
13) Maps:
map<int, vector<int> XtoY;
vector<int> temp;
if(XtoY.find(x) == XtoY.end()){
	XtoY.insert(make_pair(x, temp));
}//make_pair = insert in map;
XtoY[x].push_back(y);
14) vector lower_bound: 
Lower_bound(A.begin(), A.end(), make_pair(B,0))-A.begin();
15) const vector<int> &v; must do const_iterator or you can do auto it;
16) can copy map to vector... copy(from_begin, from_end, to_begin);
17) Also remember that 'operator <' should always return false for equal objects. It's very important – for the reason why, see the next section.
18) don't use vector<bool> use vector<int> visited
19) (i & - i) = lowest power of two that divides it... For example, 6 & -6 = 2 8 & -8 = 8 7 & -7 = 1;
20) scanf("%I64u, &d) unsigned long long d; replace with %I64d if not unsigned.
21) scanf("%lf", &double) PLEASE. printf("%.2f", double);
22) char array in c = strcmp function to compare can treat like "same" also scanf whole string with just %s, str not %s, &str
Style:
functions and class = upper camel case, spaces for everything
add comments if you think you will be confused, keep functions short and write them, 
use const and references, less coding and debugging as possible, 
variable names are always lower case.