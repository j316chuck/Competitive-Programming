<!DOCTYPE html><html lang="en">
<head>
<meta charset="utf-8">
<meta name="format-detection" content="telephone=no">
<title>Lecture 1: Administrivia; Introduction; Analysis of Algorithms, Insertion Sort, Mergesort | Video Lectures | Introduction to Algorithms (SMA 5503) | Electrical Engineering and Computer Science | MIT OpenCourseWare</title>
<!-- Begin Automatic Metadata Insertion --><meta content="6-046j-introduction-to-algorithms-sma-5503-fall-2005" name="WT.cg_n">
<meta content="Lecture 1: Administrivia; Introduction; Analysis of Algorithms, Insertion Sort, Mergesort" name="WT.cg_s">
<meta content="" name="Description">
<meta content="Leiserson, Charles" name="Author">
<meta content="Demaine, Erik" name="Author">
<meta content="algorithms,efficient algorithms,sorting,search trees,heaps,hashing,divide-and-conquer,dynamic programming,amortized analysis,graph algorithms,shortest paths,network flow,computational geometry,number-theoretic algorithms,polynomial and matrix calculations,caching,parallel computing,Algorithms and Data Structures" name="keywords">
<meta content="6.046J Introduction to Algorithms (SMA 5503) | Lecture 1: Administrivia; Introduction; Analysis of Algorithms, Insertion Sort, Mergesort" name="Search_Display">
<meta content="Algorithms and Data Structures" itemprop="about">
<!-- End Automatic Metadata Insertion --><link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/grid.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/base.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/menu.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/jquery.bubblepopup.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/courses.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/courses_new.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/jquery.jscrollpane.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/media_tabs.css">
<link href="http://ocw.mit.edu/xml/ocwcc.rdf" type="application/rdf+xml" rel="metadata">
<link rel="canonical" href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort">
<link rel="apple-touch-icon" href="../../../common/images/apple-touch-icon.png">
<script type="text/javascript" src="../../../common/scripts/jquery.js"></script><script type="text/javascript" src="../../../common/scripts/ocw-media-utils-offline.js"></script><script type="text/javascript" src="../../../common/scripts/ocw-offline.js"></script><script type="text/javascript" src="../../../common/scripts/jquery.bubblepopup.min.js"></script><script type="text/javascript" src="../../../common/scripts/jquery-ui.min.js"></script><script type="text/javascript" src="../../../common/scripts/jquery.jscrollpane.min.js"></script><script type="text/javascript" src="../../../common/scripts/bubble-popup-offline.js"></script><script type="text/javascript">
      $(document).ready(function() {
        $("#tabs").tabs();
        IpadScroller();
      });
    </script>
</head>
<body itemscope itemtype="http://schema.org/WebPage">
        
	

        <div id="top">
			<div id="grid">
				
				
					
<div id="portletwrapper-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572" class="portletWrapper kssattr-portlethash-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572">
<div class="portletStaticText portlet-static-site-header">
<!--googleoff: index-->
<div class="grid_6 alpha" role="banner" id="banner"><a href="http://ocw.mit.edu/"><img class="logo" alt="MIT OpenCourseWare, Massachusetts Institute of Technology" src="../../../common/images/ocw_mast.png"></a></div>
<div class="grid_6 omega" role="form toolbar" id="subscribe">
<div class="module">
<table class="social"><tbody><tr>
<td class="socialbutton"><a href="http://ocw.mit.edu/subscribe/index.htm?utm_source=header"><img src="../../../common/images/trans.gif" alt="An icon depicting an envelope.">Subscribe to the OCW Newsletter</a></td>
            <td>
<a href="https://plus.google.com/104567381989352550847/posts"><img alt="Click to visit our Google+ page." src="../../../common/images/icon_gp.png"></a><a href="https://www.pinterest.com/mitocw/pins/"><img alt="Click to visit our Pinterest page." src="../../../common/images/icon_pin.png"></a><a href="http://facebook.com/mitocw"><img alt="Click to visit our Facebook page." src="../../../common/images/icon_fb.png"></a><a href="http://twitter.com/mitocw"><img alt="Click to visit our Twitter feed." src="../../../common/images/icon_tw.png"></a>
</td>
        </tr></tbody></table>
</div>
<p class="helplinks"><a href="http://ocw.mit.edu/help">Help</a>   |   <a href="../../../common/jsp/feedback.htm">Contact Us</a></p>
</div>
<div class="clear"> </div>
<!--googleon: index-->
</div>

</div>





<!--googleoff: index-->
<div id="mega" role="navigation" class="grid_8 alpha">        
	<ul id="menu">
<li id="menu_home">
            <a href="http://ocw.mit.edu/"><img src="../../../common/images/top-nav_home.png" class="home_icon" alt="Click for site home page."></a><!-- Begin Home Item -->
        </li>
<!-- End Home Item -->        
        <li class="selected">
            <a href="#" class="drop">Find Courses</a><!-- Begin 5 columns Item -->
            <div class="dropdown_5columns-a mega-courses">                    
                <div class="col_1a">
                    <div class="row_1a">
                        <div class="quart">
                            <h2 class="nav">Find courses by:</h2>
                            <ul class="nav-bullet find_by">
<li><a href="http://ocw.mit.edu/courses/find-by-topic/">Topic</a></li>
                                <li><a href="http://ocw.mit.edu/courses/find-by-number/">MIT Course Number</a></li>
                                <li><a href="http://ocw.mit.edu/courses/find-by-department/">Department</a></li>
                            </ul>
<ul style="margin-top: 88px;" class="nav-bullet find_by">
<li style="font-weight: normal; font-size: 1em;"><a href="http://ocw.mit.edu/courses/">View All Courses</a></li>
							</ul>
</div>
                        <div class="quart">
                            <h2 class="nav">Collections</h2>
                            <ul class="nav-bullet">
<li><a href="http://ocw.mit.edu/courses/audio-video-courses/">Audio/Video Lectures</a></li>
                                <li><a href="http://ocw.mit.edu/courses/online-textbooks/">Online Textbooks</a></li>
                                <li><a href="http://ocw.mit.edu/courses/new-courses/">New Courses</a></li>
                                <li><a href="http://ocw.mit.edu/courses/most-visited-courses/">Most Visited Courses</a></li>
                                <li><a href="http://ocw.mit.edu/courses/ocw-scholar/">OCW Scholar Courses</a></li>
                                <li><a href="http://ocw.mit.edu/courses/this-course-at-mit/">This Course at MIT</a></li>
                                <li><a href="http://ocw.mit.edu/resources/">Supplemental Resources</a></li>
                            </ul>
</div>
                        <div class="clear"> </div>
                    </div>
                    <div class="row_1b">
                        <h2 class="nav">Cross-Disciplinary Topic Lists</h2>
                        <div class="quart">
                        <ul class="nav-bullet">
<li><a href="http://ocw.mit.edu/courses/energy-courses">Energy</a></li>
                            <li><a href="http://ocw.mit.edu/courses/entrepreneurship">Entrepreneurship</a></li>
                            <li><a href="http://ocw.mit.edu/courses/environment-courses">Environment</a></li>
                        </ul>
</div>    
                        <div class="quart">
                        <ul class="nav-bullet">
<li><a href="http://ocw.mit.edu/courses/intro-programming">Introductory Programming</a></li>
                            <li><a href="http://ocw.mit.edu/courses/life-sciences">Life Sciences</a></li>
                            <li><a href="http://ocw.mit.edu/courses/transportation-courses">Transportation</a></li>
                        </ul>
</div>
                        <div class="clear"> </div>
                    </div>
                    <div class="clear"> </div>
                </div>
                <div class="col_1b">
                    <h2 class="nav">Translated Courses</h2>
                    <ul class="nav-bullet">
<li><a href="http://ocw.mit.edu/courses/translated-courses/traditional-chinese">繁體字 / Traditional Chinese</a></li>
                        <li><a href="http://ocw.mit.edu/courses/translated-courses/spanish">Español / Spanish</a></li>
                        <li><a href="http://ocw.mit.edu/courses/translated-courses/portuguese">Português / Portuguese</a></li>
                        <li><a href="http://ocw.mit.edu/courses/translated-courses/persian">فارسی / Persian</a></li>
                        <li><a href="http://ocw.mit.edu/courses/translated-courses/turkish">Türkçe / Turkish</a></li>
                        <li><a href="http://ocw.mit.edu/courses/translated-courses/korean">(비디오)한국 / Korean</a></li>
                        <li><a href="http://ocw.mit.edu/courses/translated-courses">More...</a></li>
                    </ul>
</div>
            </div>
        </li>
        <li>
            <a href="" class="drop">About</a>
            <div class="dropdown_1column-a">
                <div class="col_1">
                    <ul class="nav-bullet mega-div-bottom">
<li><a href="http://ocw.mit.edu/about/">About MIT OpenCourseWare</a></li>
                    </ul>
<ul class="nav-bullet mega-div-bottom">
<li><a href="http://ocw.mit.edu/about/site-statistics/">Site Stats</a></li>
                        <li><a href="http://ocw.mit.edu/about/ocw-stories/">OCW Stories</a></li>                        
                    </ul>
<ul class="nav-bullet">
<li><a href="http://ocw.mit.edu/about/media-coverage/">Media Coverage</a></li>
                        <li><a href="http://ocw.mit.edu/about/newsletter/">Newsletter</a></li>                        
                    </ul>
</div>
            </div>  
        </li>    
        <li>
            <a href="" class="drop">Donate</a>        
            <div class="dropdown_1column-a">
                    <div class="col_1">
                        <ul class="nav-bullet mega-div-bottom">
<li><a href="http://ocw.mit.edu/donate/">Make a Donation</a></li>
                            <li><a href="http://ocw.mit.edu/donate/why-donate/">Why Donate?</a></li>
                            <li><a href="http://ocw.mit.edu/donate/our-supporters/">Our Supporters</a></li>
                            <li><a href="http://ocw.mit.edu/donate/other-ways-to-contribute/">Other Ways to Contribute</a></li>
                            <li><a href="http://ocw.mit.edu/donate/shop-ocw">Shop OCW</a></li>
                        </ul>
<ul class="nav-bullet">
<li><a href="http://ocw.mit.edu/support/">Become a Corporate Sponsor</a></li>
                        </ul>
</div>
            </div>            
        </li>        
        <li>
            <a href="" class="drop">Featured Sites</a>        
            <div class="dropdown_1column-a">
                <div class="col_1">
                    <ul class="nav-bullet mega-div-bottom">
<li><a href="http://ocw.mit.edu/high-school/">Highlights for High School</a></li>
                        <li><a href="http://ocw.mit.edu/educator/">OCW Educator</a></li>
                        <li><a href="http://ocw.mit.edu/courses/crosslinks/">MIT Crosslinks and OCW</a></li>                        
                    </ul>
<ul class="nav-bullet mega-div-top">
<li><a href="http://ocw.mit.edu/ans7870/featured/mitx-courses-on-edx.htm">MITx Courses on edX</a></li>
                        <li><a href="http://teachingexcellence.mit.edu/">Teaching Excellence at MIT</a></li>
						<li><a href="http://www.oeconsortium.org/">Open Education Consortium</a></li>
                    </ul>
</div>
            </div>            
        </li>
    </ul>
</div>
<div id="search" role="search" class="grid_4 omega">
    
    <form method="get" action="../../../common/search/AdvancedSearch.htm">
     	 <table class="search"><tbody><tr>
<td class="black"><input type="text" onblur="fillSearchBox()" onfocus="clearSearchBox()" maxlength="255" value="Search" name="q" class="greytext searchField" id="terms"></td> 			 
                    <td class="black"><input type="image" src="../../../common/images/button_search.png" name="btnG" class="sub_button"></td>			 
                    <td class="text2"><a href="../../../common/search/AdvancedSearch.htm">Advanced<br>Search</a></td>
                </tr></tbody></table>
</form>
</div>
<div class="clear"></div>
<!--googleon: index-->
<!-- *end header* -->  

				
				
			</div>
<!-- top grid end -->
		</div>
<!-- top end -->
			
		<div id="center_media">
      	<div id="grid">
      		<div id="left">
        		<div id="breadcrumb_media">
                	<p>

    <a href="http://ocw.mit.edu/">Home</a>
    
        »
        
    
    
        
            <a href="http://ocw.mit.edu/courses">Courses</a>
            
                »
                
            
            
         
    
    
        
            <a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science">Electrical Engineering and Computer Science</a>
            
                »
                
            
            
         
    
    
        
            <a href="../../../contents/index.htm">Introduction to Algorithms (SMA 5503)</a>
            
                »
                
            
            
         
    
    
        
            <a href="../../../contents/video-lectures/index.htm">Video Lectures</a>
            
                »
                
            
            
         
    
    
        
            
            
            Lecture 1: Administrivia; Introduction; Analysis of Algorithms, I
         
    
</p>

            	</div>
            	<div class="clear"></div>
        		<div id="media_title">
        		<h1 class="title" itemprop="name" property="dct:title">
        <span class="" id="parent-fieldname-title">
            Lecture 1: Administrivia; Introduction; Analysis of Algorithms, Insertion Sort, Mergesort
        </span>
    </h1>
        		</div>
           		<div class="clear"></div>
           		<div id="course_wrapper_media">
           			<div id="course_nav">
           				<script language="javascript" type="text/javascript">
function toggleMenu(objID) {
  if (!document.getElementById) return;
  var ob = document.getElementById(objID);
  ob.className = (ob.className == 'selected')?'': 'selected';
}
function toggleClass(id)
{
  var divtoggleClass= document.getElementById(id);
  divtoggleClass.className = (divtoggleClass.className == 'mO')?'mC': 'mO';
  return false;
}
function changeAlt(id)
{
  id.alt = (id.alt == 'Expand Menu')?'Collapse Menu' : 'Expand Menu';
  id.title = (id.title == 'Expand Menu')?'Collapse Menu' : 'Expand Menu';
}
</script><!--Left Nav Starts --><ul>
<li class="">
			   			<a href="../../../contents/index.htm">
		                  Course Home  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/syllabus/index.htm">
		                  Syllabus  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/calendar/index.htm">
		                  Calendar  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/readings/index.htm">
		                  Readings  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/assignments/index.htm">
		                  Assignments  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/exams/index.htm">
		                  Exams  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="selected">
			   			<a href="../../../contents/video-lectures/index.htm">
		                  Video Lectures  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    
		    
         	
	<!--second tal block close-->  
	
</ul>
<!--Left Nav Ends -->
</div>
           			<div id="course_inner_media">
      					 
        <div class="" id="parent-fieldname-text">
            
            
        </div>
    
      					 

<script type="text/javascript">var caption_embed_1 ={'English - US': '/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort/JPyuH4qXLZ0.srt'}</script><div id="media-embed">
         <div class="attention_message" id="embed_1">
<p>Flash and JavaScript are required for this feature.</p>
<p>Download the video from <a href="https://itunes.apple.com/us/itunes-u/id341597754">iTunes U</a> or the <a href="http://www.archive.org/download/MIT6.046JF05MPEG4/ocw-6.046-07sep2005-220k.mp4">Internet Archive</a>.</p>
</div>
     </div>
    
     <script type="text/javascript">ocw_embed_chapter_media('embed_1', 'http://www.youtube.com/v/JPyuH4qXLZ0', 'youtube', '/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort', 'http://img.youtube.com/vi/JPyuH4qXLZ0/0.jpg',0,0, 'http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort/JPyuH4qXLZ0.srt')</script><div id="transcript1"></div>
				 <script type="text/javascript">setThreePlayTranscriptPlugin(2, 703398)</script><script type="text/javascript" src="http://p3.3playmedia.com/p3.js"></script><div id="media_resource_next_prev_nav" style="margin-top: 1em;">
        <p>
        
     	
        
            <a href="../../../contents/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/index.htm"> 
                <img src="../../../common/images/btn_next_resource.png" alt="Next track" title="Next track"></a>
       
       </p>
     </div>
 


<script type="text/javascript">
		window.onload=function(){
		init();
		
		}
		var tabLinks = new Array();
		var contentDivs = new Array();
		function init() {
		  // Grab the tab links and content divs from the page
		  var tabListItems = document.getElementById('tabs').childNodes;
		  for ( var i = 0; i < tabListItems.length; i++ ) {
			if ( tabListItems[i].nodeName == "LI" ) {
			  var tabLink = getFirstChildWithTagName( tabListItems[i], 'A' );
			  var id = getHash( tabLink.getAttribute('href') );
			  tabLinks[id] = tabLink;
			  contentDivs[id] = document.getElementById( id );
			}
		  }
		  // Assign onclick events to the tab links, and
		  // highlight the first tab
		  var i = 0;
		  for ( var id in tabLinks ) {
			tabLinks[id].onclick = showTab;
			tabLinks[id].onfocus = function() { this.blur() };
			if ( i == 0 ) tabLinks[id].className = 'selected';
			i++;
		  }
		  // Hide all content divs except the first
		  var i = 0;
		  for ( var id in contentDivs ) {
			if ( i != 0 ) contentDivs[id].className = 'tabContent hide';
			i++;
		  }
		}
		function showTab() {
		  var selectedId = getHash( this.getAttribute('href') );
		  // Highlight the selected tab, and dim all others.
		  // Also show the selected content div, and hide all others.
		  for ( var id in contentDivs ) {
			if ( id == selectedId ) {
			  tabLinks[id].className = 'selected';
			  contentDivs[id].className = 'tabContent';
			} else {
			  tabLinks[id].className = '';
			  contentDivs[id].className = 'tabContent hide';
			}
		  }
		  // Stop the browser following the link
		  return false;
		}
		function getFirstChildWithTagName( element, tagName ) {
		  for ( var i = 0; i < element.childNodes.length; i++ ) {
			if ( element.childNodes[i].nodeName == tagName ) return element.childNodes[i];
		  }
		}
		function getHash( url ) {
		  var hashPos = url.lastIndexOf ( '#' );
		  return url.substring( hashPos + 1 );
		}
 </script><div id="media_tabs">
     
        <ul id="tabs">
<li class="first">
                <a href="#vid_about" class="selected">About this Video</a>
            </li>
            <li class="">
                <a href="#vid_index" class="">Playlist</a>
            </li>
            <li class="">
                <a href="#vid_playlist" class="">Related Resources</a>
            </li>
            <li class="">
                <a href="#vid_related" class="">Transcript</a>
            </li>
            <li class="">
                <a href="#vid_transcript" class="">Download this Video</a>
            </li>
        </ul>
<div id="vid_about" itemprop="description" class="tabContent">
<p><strong>Topics covered:</strong> Administrivia - Introduction - Analysis of Algorithms, Insertion Sort, Mergesort</p> <p><strong>Instructors:</strong> Prof. Erik Demaine, Prof. Charles Leiserson </p>
</div>
        <div id="vid_index" itemprop="description" class="tabContent hide">
<div class="related-media-thumbnail-nolink">
<div class="now-playing-resource">Now Playing</div>
<img src="../../../contents/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort/6_046J_lec01_th.jpg" title="Lecture 1: Administrivia; Introduction; Analysis of Algorithms, Insertion Sort, Mergesort" alt="Lecture 1: Administrivia; Introduction; Analysis of Algorithms, Insertion Sort, Mergesort"><p>Lecture 1: Administrivia; I...</p>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/index.htm">
<img src="../../../contents/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/6_046J_lec02_th.jpg" title="Lecture 2: Asymptotic Notation; Recurrences; Substitution, Master Method" alt="Lecture 2: Asymptotic Notation; Recurrences; Substitution, Master Method"><p>Lecture 2: Asymptotic Notat...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-3-divide-and-conquer-strassen-fibonacci-polynomial-multiplication/index.htm">
<img src="../../../contents/video-lectures/lecture-3-divide-and-conquer-strassen-fibonacci-polynomial-multiplication/6_046J_lec03_th.jpg" title="Lecture 3: Divide-and-Conquer: Strassen, Fibonacci, Polynomial Multiplication" alt="Lecture 3: Divide-and-Conquer: Strassen, Fibonacci, Polynomial Multiplication"><p>Lecture 3: Divide-and-Conqu...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-4-quicksort-randomized-algorithms/index.htm">
<img src="../../../contents/video-lectures/lecture-4-quicksort-randomized-algorithms/6_046J_lec04_th.jpg" title="Lecture 4: Quicksort, Randomized Algorithms" alt="Lecture 4: Quicksort, Randomized Algorithms"><p>Lecture 4: Quicksort, Rando...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-5-linear-time-sorting-lower-bounds-counting-sort-radix-sort/index.htm">
<img src="../../../contents/video-lectures/lecture-5-linear-time-sorting-lower-bounds-counting-sort-radix-sort/6_046J_lec05_th.jpg" title="Lecture 5: Linear-time Sorting: Lower Bounds, Counting Sort, Radix Sort" alt="Lecture 5: Linear-time Sorting: Lower Bounds, Counting Sort, Radix Sort"><p>Lecture 5: Linear-time Sort...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-6-order-statistics-median/index.htm">
<img src="../../../contents/video-lectures/lecture-6-order-statistics-median/6_046J_lec06_th.jpg" title="Lecture 6: Order Statistics, Median" alt="Lecture 6: Order Statistics, Median"><p>Lecture 6: Order Statistics...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-7-hashing-hash-functions/index.htm">
<img src="../../../contents/video-lectures/lecture-7-hashing-hash-functions/6_046J_lec07_th.jpg" title="Lecture 7: Hashing, Hash Functions" alt="Lecture 7: Hashing, Hash Functions"><p>Lecture 7: Hashing, Hash Fu...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-8-universal-hashing-perfect-hashing/index.htm">
<img src="../../../contents/video-lectures/lecture-8-universal-hashing-perfect-hashing/6_046J_lec08_th.jpg" title="Lecture 8: Universal Hashing, Perfect Hashing" alt="Lecture 8: Universal Hashing, Perfect Hashing"><p>Lecture 8: Universal Hashin...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-9-relation-of-bsts-to-quicksort-analysis-of-random-bst/index.htm">
<img src="../../../contents/video-lectures/lecture-9-relation-of-bsts-to-quicksort-analysis-of-random-bst/6_046J_lec09_th.jpg" title="Lecture 9: Relation of BSTs to Quicksort - Analysis of Random BST" alt="Lecture 9: Relation of BSTs to Quicksort - Analysis of Random BST"><p>Lecture 9: Relation of BSTs...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-10-red-black-trees-rotations-insertions-deletions/index.htm">
<img src="../../../contents/video-lectures/lecture-10-red-black-trees-rotations-insertions-deletions/6_046J_lec10_th.jpg" title="Lecture 10: Red-black Trees, Rotations, Insertions, Deletions" alt="Lecture 10: Red-black Trees, Rotations, Insertions, Deletions"><p>Lecture 10: Red-black Trees...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-11-augmenting-data-structures-dynamic-order-statistics-interval-trees/index.htm">
<img src="../../../contents/video-lectures/lecture-11-augmenting-data-structures-dynamic-order-statistics-interval-trees/6_046J_lec11_th.jpg" title="Lecture 11: Augmenting Data Structures, Dynamic Order Statistics, Interval Trees" alt="Lecture 11: Augmenting Data Structures, Dynamic Order Statistics, Interval Trees"><p>Lecture 11: Augmenting Data...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-12-skip-lists/index.htm">
<img src="../../../contents/video-lectures/lecture-12-skip-lists/6_046J_lec12_th.jpg" title="Lecture 12: Skip Lists" alt="Lecture 12: Skip Lists"><p>Lecture 12: Skip Lists</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-13-amortized-algorithms-table-doubling-potential-method/index.htm">
<img src="../../../contents/video-lectures/lecture-13-amortized-algorithms-table-doubling-potential-method/6_046J_lec13_th.jpg" title="Lecture 13: Amortized Algorithms, Table Doubling, Potential Method" alt="Lecture 13: Amortized Algorithms, Table Doubling, Potential Method"><p>Lecture 13: Amortized Algor...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-14-competitive-analysis-self-organizing-lists/index.htm">
<img src="../../../contents/video-lectures/lecture-14-competitive-analysis-self-organizing-lists/6_046J_lec14_th.jpg" title="Lecture 14: Competitive Analysis: Self-organizing Lists" alt="Lecture 14: Competitive Analysis: Self-organizing Lists"><p>Lecture 14: Competitive Ana...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-15-dynamic-programming-longest-common-subsequence/index.htm">
<img src="../../../contents/video-lectures/lecture-15-dynamic-programming-longest-common-subsequence/6_046J_lec15_th.jpg" title="Lecture 15: Dynamic Programming, Longest Common Subsequence" alt="Lecture 15: Dynamic Programming, Longest Common Subsequence"><p>Lecture 15: Dynamic Program...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-16-greedy-algorithms-minimum-spanning-trees/index.htm">
<img src="../../../contents/video-lectures/lecture-16-greedy-algorithms-minimum-spanning-trees/6_046J_lec16_th.jpg" title="Lecture 16: Greedy Algorithms, Minimum Spanning Trees" alt="Lecture 16: Greedy Algorithms, Minimum Spanning Trees"><p>Lecture 16: Greedy Algorith...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-17-shortest-paths-i-properties-dijkstras-algorithm-breadth-first-search/index.htm">
<img src="../../../contents/video-lectures/lecture-17-shortest-paths-i-properties-dijkstras-algorithm-breadth-first-search/6_046J_lec17_th.jpg" title="Lecture 17: Shortest Paths I: Properties, Dijkstra's Algorithm, Breadth-first Search" alt="Lecture 17: Shortest Paths I: Properties, Dijkstra's Algorithm, Breadth-first Search"><p>Lecture 17: Shortest Paths ...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-18-shortest-paths-ii-bellman-ford-linear-programming-difference-constraints/index.htm">
<img src="../../../contents/video-lectures/lecture-18-shortest-paths-ii-bellman-ford-linear-programming-difference-constraints/6_046J_lec18_th.jpg" title="Lecture 18: Shortest Paths II: Bellman-Ford, Linear Programming, Difference Constraints" alt="Lecture 18: Shortest Paths II: Bellman-Ford, Linear Programming, Difference Constraints"><p>Lecture 18: Shortest Paths ...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-19-shortest-paths-iii-all-pairs-shortest-paths-matrix-multiplication-floyd-warshall-johnson/index.htm">
<img src="../../../contents/video-lectures/lecture-19-shortest-paths-iii-all-pairs-shortest-paths-matrix-multiplication-floyd-warshall-johnson/6_046J_lec19_th.jpg" title="Lecture 19: Shortest Paths III: All-pairs Shortest Paths, Matrix Multiplication, Floyd-Warshall, Johnson" alt="Lecture 19: Shortest Paths III: All-pairs Shortest Paths, Matrix Multiplication, Floyd-Warshall, Johnson"><p>Lecture 19: Shortest Paths ...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-22-advanced-topics/index.htm">
<img src="../../../contents/video-lectures/lecture-22-advanced-topics/6_046J_lec22_th.jpg" title="Lecture 22: Advanced Topics" alt="Lecture 22: Advanced Topics"><p>Lecture 22: Advanced Topics</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-23-advanced-topics-cont./index.htm">
<img src="../../../contents/video-lectures/lecture-23-advanced-topics-cont./6_046J_lec23_th.jpg" title="Lecture 23: Advanced Topics (cont.)" alt="Lecture 23: Advanced Topics (cont.)"><p>Lecture 23: Advanced Topics...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-24-advanced-topics-cont./index.htm">
<img src="../../../contents/video-lectures/lecture-24-advanced-topics-cont./6_046J_lec24_th.jpg" title="Lecture 24: Advanced Topics (cont.)" alt="Lecture 24: Advanced Topics (cont.)"><p>Lecture 24: Advanced Topics...</p></a>
</div>
<div class="related-media-thumbnail">
<a href="../../../contents/video-lectures/lecture-25-advanced-topics-cont.-discussion-of-follow-on-classes/index.htm">
<img src="../../../contents/video-lectures/lecture-25-advanced-topics-cont.-discussion-of-follow-on-classes/6_046J_lec25_th.jpg" title="Lecture 25: Advanced Topics (cont.) - Discussion of Follow-on Classes" alt="Lecture 25: Advanced Topics (cont.) - Discussion of Follow-on Classes"><p>Lecture 25: Advanced Topics...</p></a>
</div>
</div>
        <div id="vid_playlist" itemprop="description" class="tabContent hide">
<h2 class="subhead">Related Resources</h2>
<p>Lecture Notes (<a target="_blank" href="../../../contents/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort/lec1.pdf">PDF</a>)<br><a target="_blank" href="../../../contents/assignments/index.htm">Assignments</a><br><a target="_blank" href="../../../contents/exams/index.htm">Exams</a></p>
</div>
        <div id="vid_related" itemprop="description" class="tabContent hide">
<ul><li><a class="transcript-link" title="Open in a new window." alt="Open in a new window." style="text-decoration: none; font-size: 1.0em;" target="_blank" text-decoration: none font-size: href="../../../contents/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort/JPyuH4qXLZ0.pdf"> Download this transcript - PDF (English - US)</a></li></ul>
<p><span m="6000">And finally we look at the 6</span> <span m="9000">And at that point we are done.</span> <span m="10000">We're going to get started. Handouts are the by the door if</span> <span m="14000">anybody didn't pick one up. My name is Charles Leiserson.</span> </p>
<p><span m="18000">I will be lecturing this course this term, Introduction to</span> <span m="23000">Algorithms, with Erik Demaine. In addition,</span> <span m="26000">this is an SMA course, a Singapore MIT Alliance course</span> <span m="30000">which will be run in Singapore by David Hsu.</span> </p>
<p><span m="35000">And so all the lectures will be videotaped and made available on</span> <span m="40000">the Web for the Singapore students, as well as for MIT</span> <span m="45000">students who choose to watch them on the Web.</span> </p>
<p><span m="49000">If you have an issue of not wanting to be on the videotape,</span> <span m="55000">you should sit in the back row. OK?</span> </p>
<p><span m="58000">Otherwise, you will be on it. There is a video recording</span> <span m="63000">policy, but it seems like they ran out.</span> </p>
<p><span m="66000">If anybody wants to see it, people, if they could just sort</span> <span m="70000">of pass them around maybe a little bit, once you're done</span> <span m="74000">reading it, or you can come up. I did secure one copy.</span> </p>
<p><span m="78000">Before we get into the content of the course,</span> <span m="81000">let's briefly go over the course information because there</span> <span m="85000">are some administrative things that we sort of have to do.</span> </p>
<p><span m="90000">As you can see, this term we have a big staff.</span> </p>
<p><span m="93000">Take a look at the handout here.</span> </p>
<p><span m="95000">Including this term six TAs, which is two more TAs than we</span> <span m="100000">normally get for this course. That means recitations will be</span> <span m="105000">particularly small. There is a World Wide Web page,</span> <span m="108000">and you should bookmark that and go there regularly because</span> <span m="113000">that is where everything will be distributed.</span> </p>
<p><span m="118000">Email. You should not be emailing</span> <span m="120000">directly to, even though we give you our email addresses,</span> <span m="124000">to the individual members of the staff.</span> </p>
<p><span m="126000">You should email us generally. And the reason is you will get</span> <span m="130000">much faster response. And also, for any</span> <span m="133000">communications, generally we like to monitor</span> <span m="136000">what the communications are so it's helpful to have emails</span> <span m="140000">coming to everybody on the course staff.</span> </p>
<p><span m="143000">As I mentioned, we will be doing distance</span> <span m="146000">learning this term. And so you can watch lectures</span> <span m="149000">online if you choose to do that. I would recommend,</span> <span m="154000">for people who have the opportunity to watch,</span> <span m="158000">to come live. It's better live.</span> </p>
<p><span m="160000">You get to interact. There's an intangible that</span> <span m="164000">comes with having it live. In fact, in addition to the</span> <span m="168000">videos, I meet weekly with the Singapore students so that they</span> <span m="173000">have a live session as well. Prerequisites.</span> </p>
<p><span m="178000">The prerequisites for this course are 6.042,</span> <span m="181000">which is Math for Computer Science, and 6.001.</span> </p>
<p><span m="185000">You basically need discrete mathematics and probability,</span> <span m="189000">as well as programming experience to take this course</span> <span m="193000">successfully. People do not have that</span> <span m="196000">background should not be in the class.</span> </p>
<p><span m="199000">We will be checking prerequisites.</span> </p>
<p><span m="202000">If you have any questions, please come to talk to us after</span> <span m="207000">class. Let's see.</span> </p>
<p><span m="209000">Lectures are here. For SMA students,</span> <span m="212000">they have the videotapes and they will also have a weekly</span> <span m="216000">meeting. Students must attend a one-hour</span> <span m="219000">recitation session each week. There will be new material</span> <span m="224000">presented in the recitation. Unlike the lectures,</span> <span m="227000">they will not be online. Unlike the lectures,</span> <span m="231000">there will not be lecture notes distributed for the recitations</span> <span m="235000">in general. And, yet, there will be</span> <span m="239000">material there that is directly on the exams.</span> </p>
<p><span m="243000">And so every term we say oh, when did you cover that?</span> </p>
<p><span m="247000">That was in recitation. You missed that one.</span> </p>
<p><span m="250000">So, recitations are mandatory. And, in particular,</span> <span m="254000">also let me just mention your recitation instructor is the one</span> <span m="258000">who assigns your final grade. So we have a grade meeting and</span> <span m="263000">keep everybody normal, but your recitation has the</span> <span m="267000">final say on your grade. Handouts.</span> </p>
<p><span m="270000">Handouts are available on the course Web page.</span> </p>
<p><span m="274000">We will not generally, except for this one,</span> <span m="278000">first handout, be bringing handouts to class.</span> </p>
<p><span m="282000">Textbook is this book, Introduction to Algorithms.</span> </p>
<p><span m="286000">MIT students can get it any of the local bookstores,</span> <span m="290000">including the MIT Coop. There is also a new online</span> <span m="295000">service that provides textbooks. You can also get a discount if</span> <span m="301000">you buy it at the MIT Press Bookstore.</span> </p>
<p><span m="304000">There is a coupon in the MIT Student Telephone Directory for</span> <span m="310000">a discount on MIT Press books. And you can use that to</span> <span m="314000">purchase this book at a discount.</span> </p>
<p><span m="317000">Course website. This is the course website.</span> </p>
<p><span m="321000">It links to the Stellar website, which is where,</span> <span m="325000">actually, everything will be kept.</span> </p>
<p><span m="330000">And SMA students have their own website.</span> </p>
<p><span m="333000">Some students find this course particularly challenges so we</span> <span m="337000">will have extra help. We will post weekly office</span> <span m="341000">hours on the course website for the TAs.</span> </p>
<p><span m="344000">And then as an experiment this term, we are going to offer</span> <span m="349000">homework labs for this class. What a homework lab is,</span> <span m="353000">is it's a place and a time you can go where other people in the</span> <span m="358000">course will go to do homework. And there will be typically two</span> <span m="364000">TAs who staff the lab. And so, as you're working on</span> <span m="367000">your homework, you can get help from the TAs</span> <span m="370000">if you need it. And it's generally a place,</span> <span m="373000">we're going to schedule those, and they will be on the course</span> <span m="377000">calendar for where it is and when it is that they will be</span> <span m="381000">held, but usually Sundays 2:00 to 4:00 pm, or else it will be</span> <span m="386000">some evening. I think the first one is an</span> <span m="388000">evening, right? Near to when the homework is</span> <span m="393000">due. Your best bet is try to do the</span> <span m="396000">homework in advance of the homework lab.</span> </p>
<p><span m="399000">But then, if you want extra help, if you want to talk over</span> <span m="403000">your solutions with people because as we will talk about</span> <span m="408000">problem sets you can solve in collaboration with other people</span> <span m="413000">in the class. In addition,</span> <span m="415000">there are several peer assistance programs.</span> </p>
<p><span m="420000">Also the office of Minority Education has an assistance</span> <span m="424000">program, and those usually get booked up pretty quickly.</span> </p>
<p><span m="428000">If you're interested in those, good idea to make an</span> <span m="432000">appointment to get there and get help soon.</span> </p>
<p><span m="435000">The homework labs, I hope a lot of people will try</span> <span m="439000">that out. We've never done this.</span> </p>
<p><span m="441000">I don't know of any other course.</span> </p>
<p><span m="444000">Do other people know of courses at MIT that have done this?</span> </p>
<p><span m="448000">6.011 did it, OK.</span> </p>
<p><span m="451000">Good. And was it successful in that</span> <span m="454000">class? It never went,</span> </p>
<p><span m="456000">OK. Good. [LAUGHTER] We will see. If it's not paying off then we</span> <span m="462000">will just return to ordinary office hours for those TAs,</span> <span m="467000">but I think for some students that is a good opportunity.</span> </p>
<p><span m="472000">If you wish to be registered in this course, you must sign up on</span> <span m="478000">the course Web page. So, that is requirement one.</span> </p>
<p><span m="484000">It must be done today. You will find it difficult to</span> <span m="489000">pass the course if you are not in the class.</span> </p>
<p><span m="493000">And you should notify your TA if you decide to drop so that we</span> <span m="499000">can get you off and stop the mailings, stop the spam.</span> </p>
<p><span m="503000">And you should register today before 7:00 PM.</span> </p>
<p><span m="509000">And then we're going to email your recitation assignment to</span> <span m="513000">you before Noon tomorrow. And if you don't receive this</span> <span m="516000">information by Thursday Noon, please send us an email to the</span> <span m="521000">course staff generally, not to me individually,</span> <span m="524000">saying that you didn't receive your recitation assignment.</span> </p>
<p><span m="528000">And so if you haven't received it by Thursday Noon you want to.</span> </p>
<p><span m="532000">I think generally they are going to send them out tonight</span> <span m="536000">or at least by tomorrow morning. Yeah.</span> </p>
<p><span m="540000">OK. SMA students don't have to</span> <span m="542000">worry about this. Problem sets.</span> </p>
<p><span m="543000">We have nine problem sets that we project will be assigned</span> <span m="547000">during the semester. A couple things about problem</span> <span m="550000">sets. Homeworks won't generally be</span> <span m="552000">accepted, if you have extenuating circumstances you</span> <span m="555000">should make prior arrangements with your recitation instructor.</span> </p>
<p><span m="558000">In fact, almost all of the administrative stuff,</span> <span m="561000">you shouldn't come to me to ask and say can I hand in something</span> <span m="565000">late? You should be talking to your</span> <span m="567000">recitation instructor. You can read the other things</span> <span m="572000">about the form, but let me just mention that</span> <span m="575000">there are exercises that should be solved but not handed in as</span> <span m="580000">well to give you drill on the material.</span> </p>
<p><span m="583000">I highly recommend you doing the exercises.</span> </p>
<p><span m="586000">They both test your understanding of the material,</span> <span m="590000">and exercises have this way of finding themselves on quizzes.</span> </p>
<p><span m="595000">You're often asked to describe algorithms.</span> </p>
<p><span m="600000">And here is a little outline of what you can use to describe an</span> <span m="606000">algorithm. The grading policy is something</span> <span m="609000">that somehow I cover. And always every term there are</span> <span m="615000">at least a couple of students who pretend like I never showed</span> <span m="620000">them this. If you skip problems it has a</span> <span m="624000">nonlinear effect on your grade. Nonlinear, OK?</span> </p>
<p><span m="630000">If you don't skip any problems, no effect on your grade.</span> </p>
<p><span m="634000">If you skip one problem, a hundredth of a letter grade,</span> <span m="638000">we can handle that. But two problems it's a tenth.</span> </p>
<p><span m="642000">And, as you see, by the time you have skipped</span> <span m="646000">like five letter grades, it is already five problems.</span> </p>
<p><span m="650000">This is not problem sets, by the way.</span> </p>
<p><span m="653000">This is problems, OK?</span> </p>
<p><span m="654000">You're down a third of a letter grade.</span> </p>
<p><span m="659000">And if you don't do nine or more, so that's typically about</span> <span m="663000">three to four problem sets, you don't pass the class.</span> </p>
<p><span m="667000">I always have some students coming at the end of the year</span> <span m="671000">saying oh, I didn't do any of my problems.</span> </p>
<p><span m="674000">Can you just pass me because I did OK on the exams?</span> </p>
<p><span m="678000">Answer no, a very simple answer because we've said it upfront.</span> </p>
<p><span m="683000">So, the problem sets are an integral part of the course.</span> </p>
<p><span m="687000">Collaboration policy. This is extremely important so</span> <span m="692000">everybody pay attention. If you are asleep now wake up.</span> </p>
<p><span m="695000">Like that's going to wake anybody up, right?</span> </p>
<p><span m="699000">[LAUGHTER] The goal of homework.</span> </p>
<p><span m="701000">Professor Demaine and my philosophy is that the goal of</span> <span m="705000">homework is to help you learn the material.</span> </p>
<p><span m="708000">And one way of helping to learn is not to just be stuck and</span> <span m="712000">unable to solve something because then you're in no better</span> <span m="716000">shape when the exam roles around, which is where we're</span> <span m="720000">actually evaluating you. So, you're encouraged to</span> <span m="724000">collaborate. But there are some commonsense</span> <span m="727000">things about collaboration. If you go and you collaborate</span> <span m="731000">to the extent that all you're doing is getting the information</span> <span m="735000">from somebody else, you're not learning the</span> <span m="738000">material and you're not going to do well on the exams.</span> </p>
<p><span m="742000">In our experience, students who collaborate</span> <span m="745000">generally do better than students who work alone.</span> </p>
<p><span m="750000">But you owe it to yourself, if you're going to work in a</span> <span m="753000">study group, to be prepared for your study group meeting.</span> </p>
<p><span m="757000">And specifically you should spend a half an hour to 45</span> <span m="760000">minutes on each problem before you go to group so you're up to</span> <span m="764000">speed and you've tried out your ideas.</span> </p>
<p><span m="767000">And you may have solutions to some, you may be stuck on some</span> <span m="770000">other ones, but at least you applied yourself to it.</span> </p>
<p><span m="774000">After 30 to 45 minutes, if you cannot get the problem,</span> <span m="777000">just sitting there and banging your head against it makes no</span> <span m="781000">sense. It's not a productive use of</span> <span m="784000">your time. And I know most of you have</span> <span m="787000">issues with having time on your hands, right?</span> </p>
<p><span m="789000">Like it's not there. So, don't go banging your head</span> <span m="793000">against problems that are too hard or where you don't</span> <span m="796000">understand what's going on or whatever.</span> </p>
<p><span m="798000">That's when the study group can help out.</span> </p>
<p><span m="801000">And, as I mentioned, we'll have homework labs which</span> <span m="804000">will give you an opportunity to go and do that and coordinate</span> <span m="808000">with other students rather than necessarily having to form your</span> <span m="812000">own group. And the TAs will be there.</span> </p>
<p><span m="815000">If your group is unable to solve the problem then talk to</span> <span m="820000">other groups or ask your recitation instruction.</span> </p>
<p><span m="823000">And, that's how you go about solving them.</span> </p>
<p><span m="826000">Writing up the problem sets, however, is your individual</span> <span m="831000">responsibility and should be done alone.</span> </p>
<p><span m="834000">You don't write up your problem solutions with other students,</span> <span m="838000">you write them up on your own. And you should on your problem</span> <span m="844000">sets, because this is an academic place,</span> <span m="847000">we understand that the source of academic information is very</span> <span m="852000">important, if you collaborated on solutions you should write a</span> <span m="857000">list of the collaborators. Say I worked with so and so on</span> <span m="862000">this solution. It does not affect your grade.</span> </p>
<p><span m="865000">It's just a question of being scholarly.</span> </p>
<p><span m="870000">It is a violation of this policy to submit a problem</span> <span m="874000">solution that you cannot orally explain to a member of the</span> <span m="878000">course staff. You say oh, well,</span> <span m="881000">my write-up is similar to that other person's.</span> </p>
<p><span m="884000">I didn't copy them. We may ask you to orally</span> <span m="888000">explain your solution. If you are unable,</span> <span m="891000">according to this policy, the presumption is that you</span> <span m="895000">cheated. So, do not write up stuff that</span> <span m="898000">you don't understand. You should be able to write up</span> <span m="904000">the stuff that you understand. Understand why you're putting</span> <span m="908000">down what you're putting down. If it isn't obvious,</span> <span m="912000">no collaboration whatsoever is permitted on exams.</span> </p>
<p><span m="915000">Exams is when we evaluate you. And now we're not interested in</span> <span m="920000">evaluating other people, we're interested in evaluating</span> <span m="923000">you. So, no collaboration on exams.</span> </p>
<p><span m="926000">We will have a take-home exam for the second quiz.</span> </p>
<p><span m="931000">You should look at the schedule.</span> </p>
<p><span m="933000">If there are problems with the schedule of that,</span> <span m="936000">we want to know early. And we will give you more</span> <span m="939000">details about the collaboration in the lecture on Monday,</span> <span m="943000">November 28th. Now, generally,</span> <span m="945000">the lectures here, they're mandatory and you have</span> <span m="949000">to know them, but I know that some people say</span> <span m="952000">gee, 9:30 is kind of early, especially on a Monday or</span> <span m="955000">whatever. It can be kind of early to get</span> <span m="958000">up. However, on Monday,</span> <span m="961000">November 28th, you fail the exam if you do not</span> <span m="965000">show up to lecture on time. That one day you must show up.</span> </p>
<p><span m="970000">Any questions about that? That one day you must show up</span> <span m="974000">here, even if you've been watching them on the Web.</span> </p>
<p><span m="978000">And generally, if you think you have</span> <span m="981000">transgressed, the best is to come to us to</span> <span m="984000">talk about it. We can usually work something</span> <span m="988000">out. It's when we find somebody has</span> <span m="992000">transgressed from a third-party or from obvious analyses that we</span> <span m="997000">do with homeworks, that's when things get messy.</span> </p>
<p><span m="1001000">So, if you think, for some reason or other,</span> <span m="1005000">oh, I may have done something wrong, please come and talk to</span> <span m="1009000">us. We actually were students once,</span> <span m="1012000">too, albeit many years ago. Any questions?</span> </p>
<p><span m="1016000">So, this class has great material.</span> </p>
<p><span m="1020000">Fabulous material. And it's really fun,</span> <span m="1026000">but you do have to work hard. Let's talk content.</span> </p>
<p><span m="1049000">This is the topic of the first part of the course.</span> </p>
<p><span m="1052000">The first part of the course is focused on analysis.</span> </p>
<p><span m="1055000">The second part of the course is focused on design.</span> </p>
<p><span m="1059000">Before you can do design, you have to master a bunch of</span> <span m="1063000">techniques for analyzing algorithms.</span> </p>
<p><span m="1065000">And then you'll be in a position to design algorithms</span> <span m="1069000">that you can analyze and that which are efficient.</span> </p>
<p><span m="1072000">The analysis of algorithm is the theoretical study --</span> <span m="1085000">-- of computer program performance --</span> <span m="1099000">-- and resource usage. And a particular focus on</span> <span m="1104000">performance. We're studying how to make</span> <span m="1108000">things fast. In particular,</span> <span m="1111000">computer programs. We also will discover and talk</span> <span m="1116000">about other resources such as communication,</span> <span m="1120000">such as memory, whether RAM memory or disk</span> <span m="1124000">memory. There are other resources that</span> <span m="1128000">we may care about, but predominantly we focus on</span> <span m="1132000">performance. Because this is a course about</span> <span m="1137000">performance, I like to put things in perspective a little</span> <span m="1142000">bit by starting out and asking, in programming,</span> <span m="1147000">what is more important than performance?</span> </p>
<p><span m="1153000">If you're in an engineering situation and writing code,</span> <span m="1158000">writing software, what's more important than</span> <span m="1163000">performance? Correctness.</span> </p>
<p><span m="1166000">Good. OK. What else? Simplicity can be.</span> </p>
<p><span m="1171000">Very good. Yeah.</span> </p>
<p><span m="1172000">Maintainability often much more important than performance.</span> </p>
<p><span m="1180000">Cost. And what type of cost are you</span> <span m="1184000">thinking? No, I mean cost of what?</span> </p>
<p><span m="1189000">We're talking software here, right?</span> </p>
<p><span m="1193000">What type of cost do you have in mind?</span> </p>
<p><span m="1200000">There are some costs that are involved when programming like</span> <span m="1205000">programmer time. So, programmer time is another</span> <span m="1208000">thing also that might be. Stability.</span> </p>
<p><span m="1211000">Robustness of the software. Does it break all the time?</span> </p>
<p><span m="1216000">What else?</span> </p>
<p><span m="1225000">Come on. We've got a bunch of engineers</span> <span m="1228000">here. A lot of things.</span> </p>
<p><span m="1230000">How about features? Features can be more important.</span> </p>
<p><span m="1233000">Having a wider collection of features than your competitors.</span> </p>
<p><span m="1237000">Functionality. Modularity.</span> </p>
<p><span m="1239000">Is it designed in a way where you can make changes in a local</span> <span m="1244000">part of the code and you don't have to make changes across the</span> <span m="1248000">code in order to affect a simple change in the functionality?</span> </p>
<p><span m="1252000">There is one big one which definitely, especially in the</span> <span m="1256000">`90s, was like the big thing in computers.</span> </p>
<p><span m="1261000">The big thing. Well, security actually.</span> </p>
<p><span m="1263000">Good. I don't even have that one</span> <span m="1266000">down. Security is excellent.</span> </p>
<p><span m="1268000">That's actually been more in the 2000.</span> </p>
<p><span m="1271000">Security has been far more important often than</span> <span m="1274000">performance. Scalability has been important,</span> <span m="1277000">although scalability, in some sense,</span> <span m="1280000">is performance related. But, yes, scalability is good.</span> </p>
<p><span m="1284000">What was the big breakthrough and why do people use Macintosh</span> <span m="1289000">rather than Windows, those people who are of that</span> <span m="1292000">religion? User-friendliness.</span> </p>
<p><span m="1296000">Wow. If you look at the number of</span> <span m="1298000">cycles of computers that went into user-friendliness in the</span> <span m="1303000">`90s, it grew from almost nothing to where it's now the</span> <span m="1307000">vast part of the computation goes into user-friendly.</span> </p>
<p><span m="1312000">So, all those things are more important than performance.</span> </p>
<p><span m="1316000">This is a course on performance.</span> </p>
<p><span m="1320000">Then you can say OK, well, why do we bother and why</span> <span m="1325000">study algorithms and performance if it's at the bottom of the</span> <span m="1332000">heap? Almost always people would</span> <span m="1335000">rather have these other things than performance.</span> </p>
<p><span m="1340000">You go off and you say to somebody, would I rather have</span> <span m="1346000">performance or more user-friendliness?</span> </p>
<p><span m="1352000">It's almost always more important than performance.</span> </p>
<p><span m="1356000">Why do we care then? Yeah?</span> </p>
<p><span m="1364000">That wasn't user-friendly. Sometimes performance is</span> <span m="1367000">correlated with user-friendliness,</span> <span m="1370000">absolutely. Nothing is more frustrating</span> <span m="1372000">than sitting there waiting, right?</span> </p>
<p><span m="1375000">So, that's a good reason. What are some other reasons</span> <span m="1378000">why? Sometimes they have real-time</span> <span m="1382000">constraints so they don't actually work unless they</span> <span m="1387000">perform adequately. Yeah?</span> </p>
<p><span m="1390000">Hard to get, well, we don't usually quantify</span> <span m="1394000">user-friendliness so I'm not sure, but I understand what</span> <span m="1399000">you're saying. He said we don't get</span> <span m="1403000">exponential performance improvements in</span> <span m="1406000">user-friendliness. We often don't get that in</span> <span m="1412000">performance either, by the way.</span> </p>
<p><span m="1414000">[LAUGHTER] Sometimes we do, but that's good.</span> </p>
<p><span m="1418000">There are several reasons that I think are important.</span> </p>
<p><span m="1422000">Once is that often performance measures the line between the</span> <span m="1427000">feasible and the infeasible. We have heard some of these</span> <span m="1431000">things. For example,</span> <span m="1433000">when there are real-time requirements,</span> <span m="1436000">if it's not fast enough it's simply not functional.</span> </p>
<p><span m="1442000">Or, if it uses too much memory it's simply not going to work</span> <span m="1445000">for you. And, as a consequence,</span> <span m="1447000">what you find is algorithms are on the cutting edge of</span> <span m="1450000">entrepreneurship. If you're talking about just</span> <span m="1453000">re-implementing stuff that people did ten years ago,</span> <span m="1456000">performance isn't that important at some level.</span> </p>
<p><span m="1459000">But, if you're talking about doing stuff that nobody has done</span> <span m="1463000">before, one of the reasons often that they haven't done it is</span> <span m="1467000">because it's too time-consuming. Things don't scale and so</span> <span m="1471000">forth. So, that's one reason,</span> <span m="1474000">is the feasible versus infeasible.</span> </p>
<p><span m="1476000">Another thing is that algorithms give you a language</span> <span m="1480000">for talking about program behavior, and that turns out to</span> <span m="1484000">be a language that has been pervasive through computer</span> <span m="1488000">science, is that the theoretical language is what gets adopted by</span> <span m="1493000">all the practitioners because it's a clean way of thinking</span> <span m="1497000">about things. A good way I think about</span> <span m="1502000">performance, and the reason it's on the bottom of the heap,</span> <span m="1507000">is sort of like performance is like money, it's like currency.</span> </p>
<p><span m="1513000">You say what good does a stack of hundred dollar bills do for</span> <span m="1518000">you? Would you rather have food or</span> <span m="1521000">water or shelter or whatever? And you're willing to pay those</span> <span m="1527000">hundred dollar bills, if you have hundred dollar</span> <span m="1531000">bills, for that commodity. Even though water is far more</span> <span m="1537000">important to your living. Well, similarly,</span> <span m="1540000">performance is what you use to pay for user-friendliness.</span> </p>
<p><span m="1544000">It's what you pay for security. And you hear people say,</span> <span m="1548000">for example, that I want greater</span> <span m="1550000">functionality, so people will program in Java,</span> <span m="1553000">even though it's much slower than C, because they'll say it</span> <span m="1558000">costs me maybe a factor of three or something in performance to</span> <span m="1562000">program in Java. But Java is worth it because</span> <span m="1566000">it's got all these object-oriented features and so</span> <span m="1570000">forth, exception mechanisms and so on.</span> </p>
<p><span m="1572000">And so people are willing to pay a factor of three in</span> <span m="1576000">performance. So, that's why you want</span> <span m="1578000">performance because you can use it to pay for these other things</span> <span m="1582000">that you want. And that's why,</span> <span m="1584000">in some sense, it's on the bottom of the heap,</span> <span m="1587000">because it's the universal thing that you quantify.</span> </p>
<p><span m="1592000">Do you want to spend a factor of two on this or spend a factor</span> <span m="1597000">of three on security, et cetera?</span> </p>
<p><span m="1599000">And, in addition, the lessons generalize to other</span> <span m="1603000">resource measures like communication,</span> <span m="1606000">like memory and so forth. And the last reason we study</span> <span m="1610000">algorithm performance is it's tons of fun.</span> </p>
<p><span m="1614000">Speed is always fun, right?</span> </p>
<p><span m="1616000">Why do people drive fast cars, race horses,</span> <span m="1619000">whatever? Rockets, et cetera,</span> <span m="1623000">why do we do that? Because speed is fun.</span> </p>
<p><span m="1626000">Ski. Who likes to ski?</span> </p>
<p><span m="1627000">I love to ski. I like going fast on those</span> <span m="1630000">skis. It's fun.</span> </p>
<p><span m="1631000">Hockey, fast sports, right?</span> </p>
<p><span m="1633000">We all like the fast sports. Not all of us,</span> <span m="1636000">I mean. Some people say he's not</span> <span m="1638000">talking to me. OK, let's move on.</span> </p>
<p><span m="1640000">That's sort of a little bit of a notion as to why we study</span> <span m="1644000">this, is that it does, in some sense,</span> <span m="1647000">form a common basis for all these other things we care</span> <span m="1650000">about. And so we want to understand</span> <span m="1655000">how can we generate money for ourselves in computation?</span> </p>
<p><span m="1660000">We're going to start out with a very simple problem.</span> </p>
<p><span m="1664000">It's one of the oldest problems that has been studied in</span> <span m="1669000">algorithms, is the problem of sorting.</span> </p>
<p><span m="1672000">We're going to actually study this for several lectures</span> <span m="1677000">because sorting contains many algorithmic techniques.</span> </p>
<p><span m="1683000">The sorting problem is the following.</span> </p>
<p><span m="1690000">We have a sequence a_1, a_2 up to a_n of numbers as</span> <span m="1700000">input. And our output is a permutation</span> <span m="1708000">of those numbers.</span> </p>
<p><span m="1722000">A permutation is a rearrangement of the numbers.</span> </p>
<p><span m="1727000">Every number appears exactly once in the rearrangement such</span> <span m="1733000">that, I sometimes use a dollar sign to mean "such that," a_1 is</span> <span m="1739000">less than or equal to a_2 prime. Such that they are</span> <span m="1746000">monotonically increasing in size.</span> </p>
<p><span m="1751000">Take a bunch of numbers, put them in order.</span> </p>
<p><span m="1757000">Here's an algorithm to do it. It's called insertion sort.</span> </p>
<p><span m="1780000">And we will write this algorithm in what we call</span> <span m="1784000">pseudocode. It's sort of a programming</span> <span m="1787000">language, except it's got English in there often.</span> </p>
<p><span m="1791000">And it's just a shorthand for writing for being precise.</span> </p>
<p><span m="1797000">So this sorts A from 1 to n. And here is the code for it.</span> </p>
<p><span m="1859000">This is what we call pseudocode.</span> </p>
<p><span m="1861000">And if you don't understand the pseudocode then you should ask</span> <span m="1866000">questions about any of the notations.</span> </p>
<p><span m="1869000">You will start to get used to it as we go on.</span> </p>
<p><span m="1873000">One thing is that in the pseudocode we use indentation,</span> <span m="1878000">where in most languages they have some kind of begin-end</span> <span m="1883000">delimiters like curly braces or something in Java or C,</span> <span m="1887000">for example. We just use indentation.</span> </p>
<p><span m="1891000">The whole idea of the pseudocode is to try to get the</span> <span m="1895000">algorithms as short as possible while still understanding what</span> <span m="1899000">the individual steps are. In practice,</span> <span m="1902000">there actually have been languages that use indentation</span> <span m="1906000">as a means of showing the nesting of things.</span> </p>
<p><span m="1909000">It's generally a bad idea, because if things go over one</span> <span m="1912000">page to another, for example,</span> <span m="1914000">you cannot tell what level of nesting it is.</span> </p>
<p><span m="1919000">Whereas, with explicit braces it's much easier to tell.</span> </p>
<p><span m="1923000">So, there are reasons why this is a bad notation if you were</span> <span m="1929000">doing software engineering. But it's a good one for us</span> <span m="1934000">because it just keeps things short and makes fewer things to</span> <span m="1939000">write down. So, this is insertion sort.</span> </p>
<p><span m="1943000">Let's try to figure out a little bit what this does.</span> </p>
<p><span m="1949000">It basically takes an array A and at any point the thing to</span> <span m="1956000">understand is, we're setting basically,</span> <span m="1962000">we're running the outer loop from j is 2 to n,</span> <span m="1968000">and the inner loop that starts at j minus 1 and then goes down</span> <span m="1976000">until it's zero. Basically, if we look at any</span> <span m="1982000">point in the algorithm, we essentially are looking at</span> <span m="1986000">some element here j. A of j, the jth element.</span> </p>
<p><span m="1990000">And what we do essentially is we pull a value out here that we</span> <span m="1996000">call the key. And at this point the important</span> <span m="1999000">thing to understand, and we'll talk more about this</span> <span m="2004000">in recitation on Friday, is that there is an invariant</span> <span m="2008000">that is being maintained by this loop each time through.</span> </p>
<p><span m="2015000">And the invariant is that this part of the array is sorted.</span> </p>
<p><span m="2020000">And the goal each time through the loop is to increase,</span> <span m="2025000">is to add one to the length of the things that are sorted.</span> </p>
<p><span m="2031000">And the way we do that is we pull out the key and we just</span> <span m="2036000">copy values up like this. And keep copying up until we</span> <span m="2042000">find the place where this key goes, and then we insert it in</span> <span m="2047000">that place. And that's why it's called</span> <span m="2050000">insertion sort. We just sort of move the</span> <span m="2054000">things, copy the things up until we find where it goes,</span> <span m="2059000">and then we put it into place. And now we have it from A from</span> <span m="2064000">one to j is sorted, and now we can work on j plus</span> <span m="2068000">one. Let's give an example of that.</span> </p>
<p><span m="2073000">Imagine we are doing 8, 2, 4, 9, 3, 6.</span> </p>
<p><span m="2078000">We start out with j equals 2. And we figure out that we want</span> <span m="2085000">to insert it there. Now we have 2,</span> <span m="2089000">8, 4, 9, 3, 6. Then we look at the four and</span> <span m="2094000">say oh, well, that goes over here.</span> </p>
<p><span m="2100000">We get 2, 4, 8, 9, 3, 6 after the second</span> <span m="2103000">iteration of the outer loop. Then we look at 9 and discover</span> <span m="2109000">immediately it just goes right there.</span> </p>
<p><span m="2112000">Very little work to do on that step.</span> </p>
<p><span m="2115000">So, we have exactly the same output after that iteration.</span> </p>
<p><span m="2120000">Then we look at the 3 and that's going to be inserted over</span> <span m="2126000">there. 2, 3, 4, 8, 9,</span> <span m="2134000">and that goes in there. 2, 3, 4, 6, 8,</span> </p>
<p><span m="2144000">Question?</span> </p>
<p><span m="2158000">The array initially starts at one, yes.</span> </p>
<p><span m="2161000">A[1...n], OK? So, this is the insertion sort</span> <span m="2165000">algorithm. And it's the first algorithm</span> <span m="2169000">that we're going to analyze. And we're going to pull out</span> <span m="2175000">some tools that we have from our math background to help to</span> <span m="2180000">analyze it. First of all,</span> <span m="2183000">let's take a look at the issue of running time.</span> </p>
<p><span m="2189000">The running time depends, of this algorithm depends on a</span> <span m="2196000">lot of things. One thing it depends on is the</span> <span m="2201000">input itself. For example,</span> <span m="2204000">if the input is already sorted --</span> <span m="2215000">-- then insertion sort has very little work to do.</span> </p>
<p><span m="2220000">Because every time through it's going to be like this case.</span> </p>
<p><span m="2224000">It doesn't have to shuffle too many guys over because they're</span> <span m="2228000">already in place. Whereas, in some sense,</span> <span m="2231000">what's the worst case for insertion sort?</span> </p>
<p><span m="2234000">If it is reverse sorted then it's going to have to do a lot</span> <span m="2239000">of work because it's going to have to shuffle everything over</span> <span m="2243000">on each step of the outer loop. In addition to the actual input</span> <span m="2249000">it depends, of course, on the input size.</span> </p>
<p><span m="2258000">Here, for example, we did six elements.</span> </p>
<p><span m="2261000">It's going to take longer if we, for example,</span> <span m="2266000">do six times ten to the ninth elements.</span> </p>
<p><span m="2270000">If we were sorting a lot more stuff, it's going to take us a</span> <span m="2276000">lot longer. Typically, the way we handle</span> <span m="2280000">that is we are going to parameterize things in the input</span> <span m="2286000">size. We are going to talk about time</span> <span m="2290000">as a function of the size of things that we are sorting so we</span> <span m="2296000">can look at what is the behavior of that.</span> </p>
<p><span m="2299000">And the last thing I want to say about running time is</span> <span m="2304000">generally we want upper bonds on the running time.</span> </p>
<p><span m="2310000">We want to know that the time is no more than a certain</span> <span m="2314000">amount. And the reason is because that</span> <span m="2317000">represents a guarantee to the user.</span> </p>
<p><span m="2320000">If I say it's not going to run, for example,</span> <span m="2323000">if I tell you here's a program and it won't run more than three</span> <span m="2328000">seconds, that gives you real information about how you could</span> <span m="2333000">use it, for example, in a real-time setting.</span> </p>
<p><span m="2338000">Whereas, if I said here's a program and it goes at least</span> <span m="2342000">three seconds, you don't know if it's going to</span> <span m="2346000">go for three years. It doesn't give you that much</span> <span m="2350000">guarantee if you are a user of it.</span> </p>
<p><span m="2353000">Generally we want upper bonds because it represents a</span> <span m="2357000">guarantee to the user.</span> </p>
<p><span m="2370000">There are different kinds of analyses that people do.</span> </p>
<p><span m="2384000">The one we're mostly going to focus on is what's called</span> <span m="2393000">worst-case analysis. And this is what we do usually</span> <span m="2401000">where we define T of n to be the maximum time on any input of</span> <span m="2411000">size n. So, it's the maximum input,</span> <span m="2415000">the maximum it could possibly cost us on an input of size n.</span> </p>
<p><span m="2419000">What that does is, if you look at the fact that</span> <span m="2422000">sometimes the inputs are better and sometimes they're worse,</span> <span m="2426000">we're looking at the worst case of those because that's the way</span> <span m="2430000">we're going to be able to make a guarantee.</span> </p>
<p><span m="2434000">It always does something rather than just sometimes does</span> <span m="2437000">something. So, we're looking at the</span> <span m="2440000">maximum. Notice that if I didn't have</span> <span m="2442000">maximum then T(n) in some sense is a relation,</span> <span m="2446000">not a function, because the time on an input of</span> <span m="2449000">size n depends on which input of size n.</span> </p>
<p><span m="2452000">I could have many different times, but by putting the</span> <span m="2456000">maximum at it, it turns that relation into a</span> <span m="2459000">function because there's only one maximum time that it will</span> <span m="2463000">take. Sometimes we will talk about</span> <span m="2471000">average case. Sometimes we will do this.</span> </p>
<p><span m="2481000">Here T of n is then the expected time over all inputs of</span> <span m="2495000">size n. It's the expected time.</span> </p>
<p><span m="2499000">Now, if I talk about expected time, what else do I need to say</span> <span m="2505000">here? What does that mean,</span> <span m="2507000">expected time? I'm sorry.</span> </p>
<p><span m="2509000">Raise your hand. Expected inputs.</span> </p>
<p><span m="2512000">What does that mean, expected inputs?</span> </p>
<p><span m="2525000">I need more math. What do I need by expected time</span> <span m="2530000">here, math? You have to take the time of</span> <span m="2534000">every input and then average them, OK.</span> </p>
<p><span m="2538000">That's kind of what we mean by expected time.</span> </p>
<p><span m="2542000">Good. Not quite.</span> </p>
<p><span m="2544000">I mean, what you say is completely correct,</span> <span m="2548000">except is not quite enough. Yeah?</span> </p>
<p><span m="2553000">It's the time of every input times the probability that it</span> <span m="2559000">will be that input. It's a way of taking a weighted</span> <span m="2564000">average, exactly right. How do I know what the</span> <span m="2569000">probability of every input is? How do I know what the</span> <span m="2574000">probability a particular input occurs is in a given situation?</span> </p>
<p><span m="2582000">I don't. I have to make an assumption.</span> </p>
<p><span m="2586000">What's that assumption called? What kind of assumption do I</span> <span m="2592000">have to meet? I need an assumption --</span> <span m="2604000">-- of the statistical distribution of inputs.</span> </p>
<p><span m="2608000">Otherwise, expected time doesn't mean anything because I</span> <span m="2613000">don't know what the probability of something is.</span> </p>
<p><span m="2618000">In order to do probability, you need some assumptions and</span> <span m="2623000">you've got to state those assumptions clearly.</span> </p>
<p><span m="2628000">One of the most common assumptions is that all inputs</span> <span m="2633000">are equally likely. That's called the uniform</span> <span m="2637000">distribution. Every input of size n is</span> <span m="2641000">equally likely, that kind of thing.</span> </p>
<p><span m="2644000">But there are other ways that you could make that assumption,</span> <span m="2649000">and they may not all be true. This is much more complicated,</span> <span m="2654000">as you can see. Fortunately,</span> <span m="2656000">all of you have a strong probability background.</span> </p>
<p><span m="2660000">And so we will not have any trouble addressing these</span> <span m="2664000">probabilistic issues of dealing with expectations and such.</span> </p>
<p><span m="2670000">If you don't, time to go and say gee,</span> <span m="2674000">maybe I should take that Probability class that is a</span> <span m="2680000">prerequisite for this class. The last one I am going to</span> <span m="2686000">mention is best-case analysis. And this I claim is bogus.</span> </p>
<p><span m="2693000">Bogus. No good.</span> </p>
<p><span m="2695000">Why is best-case analysis bogus?</span> </p>
<p><span m="2700000">Yeah? The best-case probably doesn't</span> <span m="2702000">ever happen. Actually, it's interesting</span> <span m="2705000">because for the sorting problem, the most common things that get</span> <span m="2710000">sorted are things that are already sorted interestingly,</span> <span m="2715000">or at least almost sorted. For example,</span> <span m="2718000">one of the most common things that are sorted is check numbers</span> <span m="2723000">by banks. They tend to come in,</span> <span m="2725000">in the same order that they are written.</span> </p>
<p><span m="2730000">They're sorting things that are almost always sorted.</span> </p>
<p><span m="2736000">I mean, it's good. When upper bond,</span> <span m="2741000">not lower bound? Yeah, you want to make a</span> <span m="2746000">guarantee. And so why is this not a</span> <span m="2750000">guarantee? You're onto something there,</span> <span m="2755000">but we need a little more precision here.</span> </p>
<p><span m="2762000">How can I cheat? Yeah?</span> </p>
<p><span m="2764000">Yeah, you can cheat. You cheat.</span> </p>
<p><span m="2767000">You take any slow algorithm that you want and just check for</span> <span m="2774000">some particular input, and if it's that input,</span> <span m="2779000">then you say immediately yeah, OK, here is the answer.</span> </p>
<p><span m="2785000">And then it's got a good best-case.</span> </p>
<p><span m="2790000">But I didn't tell you anything about the vast majority of what</span> <span m="2797000">is going on. So, you can cheat with a slow</span> <span m="2802000">algorithm that works fast on some input.</span> </p>
<p><span m="2806000">It doesn't really do much for you so we normally don't worry</span> <span m="2813000">about that. Let's see.</span> </p>
<p><span m="2816000">What is insertion sorts worst-case time?</span> </p>
<p><span m="2822000">Now we get into some sort of funny issues.</span> </p>
<p><span m="2827000">First of all, it sort of depends on the</span> <span m="2832000">computer you're running on. Whose computer,</span> <span m="2837000">right? Is it a big supercomputer or is</span> <span m="2842000">it your wristwatch? They have different</span> <span m="2847000">computational abilities. And when we compare algorithms,</span> <span m="2854000">we compare them typically for relative speed.</span> </p>
<p><span m="2857000">This is if you compared two algorithms on the same machine.</span> </p>
<p><span m="2862000">You could argue, well, it doesn't really matter</span> <span m="2865000">what the machine is because I will just look at their relative</span> <span m="2870000">speed. But, of course,</span> <span m="2872000">I may also be interested in absolute speed.</span> </p>
<p><span m="2875000">Is one algorithm actually better no matter what machine</span> <span m="2879000">it's run on?</span> </p>
<p><span m="2888000">And so this kind of gets sort of confusing as to how I can</span> <span m="2893000">talk about the worst-case time of an algorithm of a piece of</span> <span m="2898000">software when I am not talking about the hardware because,</span> <span m="2903000">clearly, if I had run on a faster machine,</span> <span m="2907000">my algorithms are going to go faster.</span> </p>
<p><span m="2910000">So, this is where you get the big idea of algorithms.</span> </p>
<p><span m="2916000">Which is why algorithm is such a huge field,</span> <span m="2919000">why it spawns companies like Google, like Akamai,</span> <span m="2923000">like Amazon. Why algorithmic analysis,</span> <span m="2926000">throughout the history of computing, has been such a huge</span> <span m="2930000">success, is our ability to master and to be able to take</span> <span m="2935000">what is apparently a really messy, complicated situation and</span> <span m="2940000">reduce it to being able to do some mathematics.</span> </p>
<p><span m="2945000">And that idea is called asymptotic analysis.</span> </p>
<p><span m="2957000">And the basic idea of asymptotic analysis is to ignore</span> <span m="2961000">machine-dependent constants --</span> <span m="2974000">-- and, instead of the actual running time,</span> <span m="2978000">look at the growth of the running time.</span> </p>
<p><span m="2999000">So, we don't look at the actual running time.</span> </p>
<p><span m="3002000">We look at the growth. Let's see what we mean by that.</span> </p>
<p><span m="3007000">This is a huge idea. It's not a hard idea,</span> <span m="3010000">otherwise I wouldn't be able to teach it in the first lecture,</span> <span m="3016000">but it's a huge idea. We are going to spend a couple</span> <span m="3020000">of lectures understanding the implications of that and will</span> <span m="3025000">basically be doing it throughout the term.</span> </p>
<p><span m="3030000">And if you go on to be practicing engineers,</span> <span m="3033000">you will be doing it all the time.</span> </p>
<p><span m="3036000">In order to do that, we adopt some notations that</span> <span m="3040000">are going to help us. In particular,</span> <span m="3043000">we will adopt asymptotic notation.</span> </p>
<p><span m="3046000">Most of you have seen some kind of asymptotic notation.</span> </p>
<p><span m="3051000">Maybe a few of you haven't, but mostly you should have seen</span> <span m="3055000">a little bit. The one we're going to be using</span> <span m="3059000">in this class predominantly is theta notation.</span> </p>
<p><span m="3065000">And theta notation is pretty easy notation to master because</span> <span m="3072000">all you do is, from a formula,</span> <span m="3076000">just drop low order terms and ignore leading constants.</span> </p>
<p><span m="3090000">For example, if I have a formula like 3n^3 =</span> <span m="3095000">90n^2 - 5n + 6046, I say, well,</span> <span m="3099000">what low-order terms do I drop? Well, n^3 is a bigger term n^2</span> <span m="3108000">than. I am going to drop all these</span> <span m="3112000">terms and ignore the leading constant, so I say that's</span> <span m="3120000">Theta(n^3). That's pretty easy.</span> </p>
<p><span m="3124000">So, that's theta notation. Now, this is an engineering way</span> <span m="3129000">of manipulating theta notation. There is actually a</span> <span m="3133000">mathematical definition for this, which we are going to talk</span> <span m="3138000">about next time, which is a definition in terms</span> <span m="3142000">of sets of functions. And, you are going to be</span> <span m="3145000">responsible, this is both a math and a computer science</span> <span m="3150000">engineering class. Throughout the course you are</span> <span m="3154000">going to be responsible both for mathematical rigor as if it were</span> <span m="3159000">a math course and engineering commonsense because it's an</span> <span m="3163000">engineering course. We are going to be doing both.</span> </p>
<p><span m="3166000">This is the engineering way of understanding what you do,</span> <span m="3170000">so you're responsible for being able to do these manipulations.</span> </p>
<p><span m="3174000">You're also going to be responsible for understanding</span> <span m="3177000">the mathematical definition of theta notion and of its related</span> <span m="3181000">O notation and omega notation. If I take a look as n</span> <span m="3187000">approached infinity, a Theta(n^2) algorithm always</span> <span m="3194000">beats, eventually, a Theta(n^3) algorithm.</span> </p>
<p><span m="3200000">As n gets bigger, it doesn't matter what these</span> <span m="3206000">other terms were if I were describing the absolute precise</span> <span m="3214000">behavior in terms of a formula. If I had a Theta(n^2)</span> <span m="3221000">algorithm, it would always be faster for sufficiently large n</span> <span m="3226000">than a Theta(n^3) algorithm. It wouldn't matter what those</span> <span m="3230000">low-order terms were. It wouldn't matter what the</span> <span m="3234000">leading constant was. This one will always be faster.</span> </p>
<p><span m="3239000">Even if you ran the Theta(n^2) algorithm on a slow computer and</span> <span m="3245000">the Theta(n^3) algorithm on a fast computer.</span> </p>
<p><span m="3249000">The great thing about asymptotic notation is it</span> <span m="3253000">satisfies our issue of being able to compare both relative</span> <span m="3259000">and absolute speed, because we are able to do this</span> <span m="3264000">no matter what the computer platform.</span> </p>
<p><span m="3269000">On different platforms we may get different constants here,</span> <span m="3274000">machine-dependent constants for the actual running time,</span> <span m="3279000">but if I look at the growth as the size of the input gets</span> <span m="3285000">larger, the asymptotics generally won't change.</span> </p>
<p><span m="3289000">For example, I will just draw that as a</span> <span m="3293000">picture. If I have n on this axis and</span> <span m="3297000">T(n) on this axis. This may be,</span> <span m="3301000">for example, a Theta(n^3) algorithm and this</span> <span m="3304000">may be a Theta(n^2) algorithm. There is always going to be</span> <span m="3309000">some point n_o where for everything larger the Theta(n^2)</span> <span m="3314000">algorithm is going to be cheaper than the Theta(n^3) algorithm</span> <span m="3319000">not matter how much advantage you give it at the beginning in</span> <span m="3324000">terms of the speed of the computer you are running on.</span> </p>
<p><span m="3330000">Now, from an engineering point of view, there are some issues</span> <span m="3334000">we have to deal with because sometimes it could be that that</span> <span m="3338000">n_o is so large that the computers aren't big enough to</span> <span m="3342000">run the problem. That's why we,</span> <span m="3345000">nevertheless, are interested in some of the</span> <span m="3348000">slower algorithms, because some of the slower</span> <span m="3351000">algorithms, even though they may not asymptotically be slower,</span> <span m="3355000">I mean asymptotically they will be slower.</span> </p>
<p><span m="3360000">They may still be faster on reasonable sizes of things.</span> </p>
<p><span m="3363000">And so we have to both balance our mathematical understanding</span> <span m="3367000">with our engineering commonsense in order to do good programming.</span> </p>
<p><span m="3372000">So, just having done analysis of algorithms doesn't</span> <span m="3375000">automatically make you a good programmer.</span> </p>
<p><span m="3378000">You also need to learn how to program and use these tools in</span> <span m="3382000">practice to understand when they are relevant and when they are</span> <span m="3386000">not relevant. There is a saying.</span> </p>
<p><span m="3390000">If you want to be a good program, you just program ever</span> <span m="3394000">day for two years, you will be an excellent</span> <span m="3398000">programmer. If you want to be a world-class</span> <span m="3402000">programmer, you can program every day for ten years,</span> <span m="3406000">or you can program every day for two years and take an</span> <span m="3411000">algorithms class. Let's get back to what we were</span> <span m="3415000">doing, which is analyzing insertion sort.</span> </p>
<p><span m="3420000">We are going to look at the worse-case.</span> </p>
<p><span m="3436000">Which, as we mentioned before, is when the input is reverse</span> <span m="3441000">sorted. The biggest element comes first</span> <span m="3444000">and the smallest last because now every time you do the</span> <span m="3449000">insertion you've got to shuffle everything over.</span> </p>
<p><span m="3455000">You can write down the running time by looking at the nesting</span> <span m="3458000">of loops. What we do is we sum up.</span> </p>
<p><span m="3460000">What we assume is that every operation, every elemental</span> <span m="3463000">operation is going to take some constant amount of time.</span> </p>
<p><span m="3467000">But we don't have to worry about what that constant is</span> <span m="3470000">because we're going to be doing asymptotic analysis.</span> </p>
<p><span m="3473000">As I say, the beautify of the method is that it causes all</span> <span m="3476000">these things that are real distinctions to sort of vanish.</span> </p>
<p><span m="3481000">We sort of look at them from 30,000 feet rather than from</span> <span m="3485000">three millimeters or something. Each of these operations is</span> <span m="3489000">going to sort of be a basic operation.</span> </p>
<p><span m="3492000">One way to think about this, in terms of counting</span> <span m="3496000">operations, is counting memory references.</span> </p>
<p><span m="3499000">How many times do you actually access some variable?</span> </p>
<p><span m="3503000">That's another way of sort of thinking about this model.</span> </p>
<p><span m="3509000">When we do that, well, we're going to go through</span> <span m="3513000">this loop, j is going from 2 to n, and then we're going to add</span> <span m="3519000">up the work that we do within the loop.</span> </p>
<p><span m="3523000">We can sort of write that in math as summation of j equals 2</span> <span m="3529000">to n. And then what is the work that</span> <span m="3533000">is going on in this loop? Well, the work that is going on</span> <span m="3538000">in this loop varies, but in the worst case how many</span> <span m="3543000">operations are going on here for each value of j?</span> </p>
<p><span m="3550000">For a given value of j, how much work goes on in this</span> <span m="3557000">loop? Can somebody tell me?</span> </p>
<p><span m="3560000">Asymptotically. It's j times some constant,</span> <span m="3566000">so it's theta j. So, there is theta j work going</span> <span m="3573000">on here because this loop starts out with i being j minus 1,</span> <span m="3578000">and then it's doing just a constant amount of stuff for</span> <span m="3584000">each step of the value of i, and i is running from j minus</span> <span m="3589000">one down to zero. So, we can say that is theta j</span> <span m="3594000">work that is going on. Do people follow that?</span> </p>
<p><span m="3600000">OK. And now we have a formula we</span> <span m="3602643">can evaluate. What is the evaluation?</span> </p>
<p><span m="3605713">If I want to simplify this formula, what is that equal to?</span> </p>
<p><span m="3620000">Sorry. In the back there.</span> </p>
<p><span m="3628000">Yeah. OK. That's just Theta(n^2),</span> <span m="3633705">good. Because when you're saying is</span> <span m="3636227">the sum of consecutive numbers, you mean what?</span> </p>
<p><span m="3639564">What's the mathematic term we have for that so we can</span> <span m="3643421">communicate? You've got to know these things</span> <span m="3646610">so you can communicate. It's called what type of</span> <span m="3650095">sequence? It's actually a series,</span> <span m="3652468">but that's OK. What type of series is this</span> <span m="3655509">called? Arithmetic series,</span> <span m="3657363">good. Wow, we've got some sharp</span> <span m="3659588">people who can communicate. This is an arithmetic series.</span> </p>
<p><span m="3665943">You're basically summing 1 + 2 + 3 + 4, some constants in</span> <span m="3671627">there, but basically it's 1 + 2 + 3 + 4 + 5 + 6 up to n.</span> </p>
<p><span m="3677210">That's Theta(n^2). If you don't know this math,</span> <span m="3681879">there is a chapter in the book, or you could have taken the</span> <span m="3687766">prerequisite. Arithmetic series.</span> </p>
<p><span m="3691390">People have this vague recollection.</span> </p>
<p><span m="3693951">Oh, yeah. Good.</span> </p>
<p><span m="3694975">Now, you have to learn these manipulations.</span> </p>
<p><span m="3698048">We will talk about a bit next time, but you have to learn your</span> <span m="3702512">theta manipulations for what works with theta.</span> </p>
<p><span m="3705804">And you have to be very careful because theta is a weak</span> <span m="3709756">notation. A strong notation is something</span> <span m="3712609">like Leibniz notation from calculus where the chain rule is</span> <span m="3716853">just canceling two things. It's just fabulous that you can</span> <span m="3721869">cancel in the chain rule. And Leibniz notation just</span> <span m="3724885">expresses that so directly you can manipulate.</span> </p>
<p><span m="3727599">Theta notation is not like that.</span> </p>
<p><span m="3729468">If you think it is like that you are in trouble.</span> </p>
<p><span m="3732303">You really have to think of what is going on under the theta</span> <span m="3735861">notation. And it is more of a descriptive</span> <span m="3738274">notation than it is a manipulative notation.</span> </p>
<p><span m="3740867">There are manipulations you can do with it, but unless you</span> <span m="3744305">understand what is really going on under the theta notation you</span> <span m="3748044">will find yourself in trouble. And next time we will talk a</span> <span m="3753177">little bit more about theta notation.</span> </p>
<p><span m="3755977">Is insertion sort fast?</span> </p>
<p><span m="3769000">Well, it turns out for small n it is moderately fast.</span> </p>
<p><span m="3782000">But it is not at all for large n.</span> </p>
<p><span m="3798000">So, I am going to give you an algorithm that is faster.</span> </p>
<p><span m="3801626">It's called merge sort. I wonder if I should leave</span> <span m="3804917">insertion sort up. Why not.</span> </p>
<p><span m="3826000">I am going to write on this later, so if you are taking</span> <span m="3832127">notes, leave some space on the left.</span> </p>
<p><span m="3836099">Here is merge sort of an array A from 1 up to n.</span> </p>
<p><span m="3842000">And it is basically three steps.</span> </p>
<p><span m="3845963">If n equals 1 we are done. Sorting one element,</span> <span m="3851844">it is already sorted. All right.</span> </p>
<p><span m="3855808">Recursive algorithm. Otherwise, what we do is we</span> <span m="3861817">recursively sort A from 1 up to the ceiling of n over 2.</span> </p>
<p><span m="3870000">And the array A of the ceiling of n over 2 plus one up to n.</span> </p>
<p><span m="3879102">So, we sort two halves of the input.</span> </p>
<p><span m="3884502">And then, three, we take those two lists that we</span> <span m="3891754">have done and we merge them.</span> </p>
<p><span m="3903000">And, to do that, we use a merge subroutine which</span> <span m="3905892">I will show you.</span> </p>
<p><span m="3914000">The key subroutine here is merge, and it works like this.</span> </p>
<p><span m="3920492">I have two lists. Let's say one of them is 20.</span> </p>
<p><span m="3925710">I am doing this in reverse order.</span> </p>
<p><span m="3930000">I have sorted this like this. And then I sort another one.</span> </p>
<p><span m="3935368">I don't know why I do it this order, but anyway.</span> </p>
<p><span m="3939795">Here is my other list. I have my two lists that I have</span> <span m="3944786">sorted. So, this is A[1] to A[|n/2|]</span> <span m="3948083">and A[|n/2|+1] to A[n] for the way it will be called in this</span> <span m="3953639">program. And now to merge these two,</span> <span m="3956936">what I want to do is produce a sorted list out of both of them.</span> </p>
<p><span m="3964000">What I do is first observe where is the smallest element of</span> <span m="3968688">any two lists that are already sorted?</span> </p>
<p><span m="3971679">It's in one of two places, the head of the first list or</span> <span m="3976125">the head of the second list. I look at those two elements</span> <span m="3980652">and say which one is smaller? This one is smaller.</span> </p>
<p><span m="3984613">Then what I do is output into my output array the smaller of</span> <span m="3989383">the two. And I cross it off.</span> </p>
<p><span m="3992464">And now where is the next smallest element?</span> </p>
<p><span m="3995702">And the answer is it's going to be the head of one of these two</span> <span m="4000482">lists. Then I cross out this guy and</span> <span m="4003181">put him here and circle this one.</span> </p>
<p><span m="4005648">Now I look at these two guys. This one is smaller so I output</span> <span m="4010274">that and circle that one. Now I look at these two guys,</span> <span m="4014437">output 9. So, every step here is some</span> <span m="4017213">fixed number of operations that is independent of the size of</span> <span m="4021839">the arrays at each step. Each individual step is just me</span> <span m="4028202">looking at two elements and picking out the smallest and</span> <span m="4033884">advancing some pointers into the array so that I know where the</span> <span m="4040288">current head of that list is. And so, therefore,</span> <span m="4045144">the time is order n on n total elements.</span> </p>
<p><span m="4050000">The time to actually go through this and merge two lists is</span> <span m="4054628">order n. We sometimes call this linear</span> <span m="4057581">time because it's not quadratic or whatever.</span> </p>
<p><span m="4061012">It is proportional to n, proportional to the input size.</span> </p>
<p><span m="4065401">It's linear time. I go through and just do this</span> <span m="4069072">simple operation, just working up these lists,</span> <span m="4072663">and in the end I have done essentially n operations,</span> <span m="4076733">order n operations each of which cost constant time.</span> </p>
<p><span m="4082000">That's a total of order n time. Everybody with me?</span> </p>
<p><span m="4086935">OK. So, this is a recursive</span> <span m="4089553">program. We can actually now write what</span> <span m="4093381">is called a recurrence for this program.</span> </p>
<p><span m="4097309">The way we do that is say let's let the time to sort n elements</span> <span m="4103553">to be T(n). Then how long does it take to</span> <span m="4107582">do step one?</span> </p>
<p><span m="4115000">That's just constant time. We just check to see if n is 1,</span> <span m="4119228">and if it is we return. That's independent of the size</span> <span m="4123160">of anything that we are doing. It just takes a certain number</span> <span m="4127611">of machine instructions on whatever machine and we say it</span> <span m="4131765">is constant time. We call that theta one.</span> </p>
<p><span m="4134732">This is actually a little bit of an abuse if you get into it.</span> </p>
<p><span m="4140000">And the reason is because typically in order to say it you</span> <span m="4144464">need to say what it is growing with.</span> </p>
<p><span m="4147206">Nevertheless, we use this as an abuse of the</span> <span m="4150573">notation just to mean it is a constant.</span> </p>
<p><span m="4153550">So, that's an abuse just so people know.</span> </p>
<p><span m="4156604">But it simplifies things if I can just write theta one.</span> </p>
<p><span m="4160835">And it basically means the same thing.</span> </p>
<p><span m="4163733">Now we recursively sort these two things.</span> </p>
<p><span m="4166866">How can I describe that? The time to do this,</span> <span m="4172542">I can describe recursively as T of ceiling of n over 2 plus T of</span> <span m="4180550">n minus ceiling of n over 2. That is actually kind of messy,</span> <span m="4188050">so what we will do is just be sloppy and write 2T(n/2).</span> </p>
<p><span m="4194915">So, this is just us being sloppy.</span> </p>
<p><span m="4200000">And we will see on Friday in recitation that it is OK to be</span> <span m="4204120">sloppy. That's the great thing about</span> <span m="4206606">algorithms. As long as you are rigorous and</span> <span m="4209590">precise, you can be as sloppy as you want.</span> </p>
<p><span m="4212502">[LAUGHTER] This is sloppy because I didn't worry about</span> <span m="4216267">what was going on, because it turns out it doesn't</span> <span m="4219748">make any difference. And we are going to actually</span> <span m="4223158">see that that is the case. And, finally,</span> <span m="4226680">I have to merge the two sorted lists which have a total of n</span> <span m="4229767">elements. And we just analyze that using</span> <span m="4231808">the merge subroutine. And that takes us to theta n</span> <span m="4234372">time.</span> </p>
<p><span m="4240000">That allows us now to write a recurrence for the performance</span> <span m="4243933">of merge sort.</span> </p>
<p><span m="4257000">Which is to say that T of n is equal to theta 1 if n equals 1</span> <span m="4264888">and 2T of n over 2 plus theta of n if n is bigger than 1.</span> </p>
<p><span m="4272250">Because either I am doing step one or I am doing all steps one,</span> <span m="4280402">two and three. Here I am doing step one and I</span> <span m="4286187">return and I am done. Or else I am doing step one,</span> <span m="4292326">I don't return, and then I also do steps two</span> <span m="4295900">and three. So, I add those together.</span> </p>
<p><span m="4298808">I could say theta n plus theta 1, but theta n plus theta 1 is</span> <span m="4303795">just theta n because theta 1 is a lower order term than theta n</span> <span m="4308947">and I can throw it away. It is either theta 1 or it is</span> <span m="4313351">2T of n over 2 plus theta n. Now, typically we won't be</span> <span m="4317839">writing this. Usually we omit this.</span> </p>
<p><span m="4321478">If it makes no difference to the solution of the recurrence,</span> <span m="4325631">we will usually omit constant base cases.</span> </p>
<p><span m="4328446">In algorithms, it's not true generally in</span> <span m="4331262">mathematics, but in algorithms if you are running something on</span> <span m="4335555">a constant size input it takes constant time always.</span> </p>
<p><span m="4339145">So, we don't worry about what this value is.</span> </p>
<p><span m="4342172">And it turns out it has no real impact on the asymptotic</span> <span m="4346043">solution of the recurrence. How do we solve a recurrence</span> <span m="4351363">like this? I now have T of n expressed in</span> <span m="4354739">terms of T of n over 2. That's in the book and it is</span> <span m="4359043">also in Lecture 2. We are going to do Lecture 2 to</span> <span m="4363179">solve that, but in the meantime what I am going to do is give</span> <span m="4368242">you a visual way of understanding what this costs,</span> <span m="4372378">which is one of the techniques we will elaborate on next time.</span> </p>
<p><span m="4377526">It is called a recursion tree technique.</span> </p>
<p><span m="4382000">And I will use it for the actual recurrence that is almost</span> <span m="4387681">the same 2T(n/2), but I am going to actually</span> <span m="4391966">explicitly, because I want you to see where it occurs,</span> <span m="4397249">plus some constant times n where c is a constant greater</span> <span m="4402730">than zero. So, we are going to look at</span> <span m="4406418">this recurrence with a base case of order one.</span> </p>
<p><span m="4412000">I am just making the constant in here, the upper bound on the</span> <span m="4416350">constant be explicit rather than implicit.</span> </p>
<p><span m="4419322">And the way you do a recursion tree is the following.</span> </p>
<p><span m="4423092">You start out by writing down the left-hand side of the</span> <span m="4427007">recurrence. And then what you do is you say</span> <span m="4430052">well, that is equal to, and now let's write it as a</span> <span m="4433677">tree. I do c of n work plus now I am</span> <span m="4436215">going to have to do work on each of my two children.</span> </p>
<p><span m="4441000">T of n over 2 and T of n over</span> <span m="4444549">If I sum up what is in here, I get this because that is what</span> <span m="4451305">the recurrence says, T(n)=2T(n/2)+cn.</span> </p>
<p><span m="4455427">I have 2T(n/2)+cn. Then I do it again.</span> </p>
<p><span m="4459664">I have cn here. I now have here cn/2.</span> </p>
<p><span m="4463786">And here is cn/2. And each of these now has a</span> <span m="4468824">T(n/4).</span> </p>
<p><span m="4476000">And these each have a T(n/4). And this has a T(n/4).</span> </p>
<p><span m="4483285">And I keep doing that, the dangerous dot,</span> <span m="4489000">dot, dots. And, if I keep doing that,</span> <span m="4494142">I end up with it looking like this.</span> </p>
<p><span m="4518000">And I keep going down until I get to a leaf.</span> </p>
<p><span m="4523318">And a leaf, I have essentially a T(1).</span> </p>
<p><span m="4527896">That is T(1). And so the first question I ask</span> <span m="4533922">here is, what is the height of this tree?</span> </p>
<p><span m="4538983">Yeah. It's log n.</span> </p>
<p><span m="4541008">It's actually very close to exactly log n because I am</span> <span m="4547714">starting out at the top with n and then I go to n/2 and n/4 and</span> <span m="4555559">all the way down until I get to</span> <span m="4561000">The number of halvings of n until I get to 1 is log n so the</span> <span m="4565440">height here is log n. It's OK if it is constant times</span> <span m="4569354">log n. It doesn't matter.</span> </p>
<p><span m="4571161">How many leaves are in this tree, by the way?</span> </p>
<p><span m="4585000">How many leaves does this tree have?</span> </p>
<p><span m="4588333">Yeah. The number of leaves,</span> <span m="4590809">once again, is actually pretty close.</span> </p>
<p><span m="4594238">It's actually n. If you took it all the way</span> <span m="4598238">down. Let's make some simplifying</span> <span m="4601285">assumption. n is a perfect power of 2,</span> <span m="4604809">so it is an integer power of 2. Then this is exactly log n to</span> <span m="4610523">get down to T(1). And then there are exactly n</span> <span m="4614809">leaves, because the number of leaves here, the number of nodes</span> <span m="4620619">at this level is 1, 2, 4, 8.</span> </p>
<p><span m="4625000">And if I go down height h, I have 2 to the h leaves,</span> <span m="4630643">2 to the log n, that is just n.</span> </p>
<p><span m="4633963">We are doing math here, right?</span> </p>
<p><span m="4637172">Now let's figure out how much work, if I look at adding up</span> <span m="4643479">everything in this tree I am going to get T(n),</span> <span m="4648568">so let's add that up. Well, let's add it up level by</span> <span m="4655652">level. How much do we have in the</span> <span m="4659547">first level? Just cn.</span> </p>
<p><span m="4661982">If I add up the second level, how much do I have?</span> </p>
<p><span m="4667826">cn. How about if I add up the third</span> <span m="4671965">level? cn.</span> </p>
<p><span m="4673059">How about if I add up all the leaves?</span> </p>
<p><span m="4677443">Theta n. It is not necessarily cn</span> <span m="4682855">because the boundary case may have a different constant.</span> </p>
<p><span m="4689397">It is actually theta n, but cn all the way here.</span> </p>
<p><span m="4694988">If I add up the total amount, that is equal to cn times log</span> <span m="4701888">n, because that's the height, that is how many cn's I have</span> <span m="4708669">here, plus theta n. And this is a higher order term</span> <span m="4715724">than this, so this goes away, get rid of the constants,</span> <span m="4722213">that is equal to theta(n lg n). And theta(n lg n) is</span> <span m="4728341">asymptotically faster than theta(n^2).</span> </p>
<p><span m="4732786">So, merge sort, on a large enough input size,</span> <span m="4738073">is going to beat insertion sort.</span> </p>
<p><span m="4743000">Merge sort is going to be a faster algorithm.</span> </p>
<p><span m="4747291">Sorry, you guys, I didn't realize you couldn't</span> <span m="4751682">see over there. You should speak up if you</span> <span m="4755682">cannot see. So, this is a faster algorithm</span> <span m="4759682">because theta(n lg n) grows more slowly than theta(n^2).</span> </p>
<p><span m="4765048">And merge sort asymptotically beats insertion sort.</span> </p>
<p><span m="4771000">Even if you ran insertion sort on a supercomputer,</span> <span m="4775424">somebody running on a PC with merge sort for sufficient large</span> <span m="4780842">input will clobber them because actually n^2 is way bigger than</span> <span m="4786441">n log n once you get the n's to be large.</span> </p>
<p><span m="4790053">And, in practice, merge sort tends to win here</span> <span m="4794117">for n bigger than, say, 30 or so.</span> </p>
<p><span m="4798000">If you have a very small input like 30 elements,</span> <span m="4802092">insertion sort is a perfectly decent sort to use.</span> </p>
<p><span m="4806272">But merge sort is going to be a lot faster even for something</span> <span m="4811497">that is only a few dozen elements.</span> </p>
<p><span m="4814370">It is going to actually be a faster algorithm.</span> </p>
<p><span m="4818289">That's sort of the lessons, OK?</span> </p>
<p><span m="4820901">Remember that to get your recitation assignments and</span> <span m="4825342">attend recitation on Friday. Because we are going to be</span> <span m="4831250">going through a bunch of the things that I have left on the</span> <span m="4836271">table here. And see you next Monday.</span> </p>
</div>
        <div id="vid_transcript" itemprop="description" class="tabContent hide">
<h2 class="subhead">Free Downloads</h2>
<h3 class="subsubhead">Video</h3>
<ul>
<li>iTunes U (<a href="https://itunes.apple.com/us/itunes-u/id341597754">MP4 - 167MB</a>)</li>
<li>Internet Archive (<a href="http://www.archive.org/download/MIT6.046JF05MPEG4/ocw-6.046-07sep2005-220k.mp4">MP4 - 330MB</a>)</li>
</ul>
<br><h3 class="subsubhead">Free Streaming</h3>
<ul><li><a href="http://videolectures.net/mit6046jf05_introduction_algorithms/">VideoLectures.net</a></li></ul>
<br><h3 class="subsubhead">Subtitle</h3>
<ul><li>English - US (<a href="../../../contents/video-lectures/lecture-1-administrivia-introduction-analysis-of-algorithms-insertion-sort-mergesort/JPyuH4qXLZ0.srt">SRT</a>)</li></ul>
</div>
    
   </div>  




      					 
        <div class="" id="parent-fieldname-bottom_html_area">
            
            
        </div>
    
                    </div>
<!--Course_inner_chip tag close -->
           		</div>
<!--Course_wrapper tag close --> 
            </div>
<!--left tag close -->
            <div id="right">
                <!--Begin Right Portion -->
                    <div>
    
<div id="portletwrapper-6f63772e7269676874746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a646f6e617465" class="portletWrapper kssattr-portlethash-6f63772e7269676874746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a646f6e617465">
<div class="portletStaticText portlet-static-donate"><p class="zero"><a href="http://ocw.mit.edu/donate"><img src="../../../common/images/button_donate-now.png" alt="Donate Now." class="donate"></a></p></div>

</div>




</div>

                	<div>
    



</div>


        <div class="" id="parent-fieldname-rsi_top_html_area">
            
            
        </div>
    

<!-- RSI google ad space-->


<div id="google_ads">    
    <script type="text/javascript" src="http://partner.googleadservices.com/gampad/google_service.js"></script><script type="text/javascript">GS_googleAddAdSenseService("ca-pub-6588555046597237");GS_googleEnableAllServices();</script><script type="text/javascript">GA_googleAddSlot("ca-pub-6588555046597237", "VIDEO_INDIVIDUAL_SLOT_A_DL");GA_googleAddSlot("ca-pub-6588555046597237", "VIDEO_INDIVIDUAL_SLOT_B_DL");GA_googleAddSlot("ca-pub-6588555046597237", "VIDEO_INDIVIDUAL_SLOT_C_DL");</script><script type="text/javascript">GA_googleFetchAds();</script><script language="javascript" type="text/javascript">
GA_googleAddAttr("TYPE","HOUSE");
GA_googleAddAttr("DEPARTMENT","6");
GA_googleAddAttr("CRS_BEG2","04");
GA_googleAddAttr("CRS_END","6J");
GA_googleAddAttr("SESSION","F");
GA_googleAddAttr("YEAR","05");
</script><script type="text/javascript">GA_googleFillSlot("VIDEO_INDIVIDUAL_SLOT_A_DL");</script><script type="text/javascript">GA_googleFillSlot("VIDEO_INDIVIDUAL_SLOT_B_DL");</script><script type="text/javascript">GA_googleFillSlot("VIDEO_INDIVIDUAL_SLOT_C_DL");</script>
</div>

<!-- End RSI ads--> 

<div>
    



</div>

            </div>
<!--Right div close -->
            <div class="clear"></div> 
        </div>
<!--grid tag close --> 
      </div>
		
		<div id="bottom">
			<div id="grid">
				
<div id="portletwrapper-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572" class="portletWrapper kssattr-portlethash-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572">
<div class="portletStaticText portlet-static-site-footer">
<!--googleoff: index--> <div id="bottom"><div id="grid">
<!-- *begin footer* --> <div role="navigation sitemap" id="footer">
<div class="grid_2 alpha" id="foot-c1">
<h4 class="footer">Find Courses</h4> <ul class="foot-bullet">
<li><a href="http://ocw.mit.edu/courses/find-by-topic/">Find by Topic</a></li>     <li><a href="http://ocw.mit.edu/courses/find-by-number/">Find by Course Number</a></li>     <li><a href="http://ocw.mit.edu/courses/find-by-department/">Find by Department</a></li>     <li><a href="http://ocw.mit.edu/courses/audio-video-courses/">Audio/Video Courses</a></li>     <li><a href="http://ocw.mit.edu/courses/subtitled/">Courses with Subtitles</a></li>     <li><a href="http://ocw.mit.edu/courses/online-textbooks/">Online Textbooks</a></li>     <li><a href="http://ocw.mit.edu/courses/new-courses/">New Courses</a></li>     <li><a href="http://ocw.mit.edu/courses/most-visited-courses/">Most Visited Courses</a></li>     <li><a href="http://ocw.mit.edu/courses/ocw-scholar/">OCW Scholar Courses</a></li>     <li><a href="http://ocw.mit.edu/courses/this-course-at-mit/">This Course at MIT</a></li>     <li><a href="http://ocw.mit.edu/resources/">Supplemental Resources</a></li>     <li><a href="http://ocw.mit.edu/courses/translated-courses/">Translated Courses</a></li>     <li><a href="http://ocw.mit.edu/courses/">View All Courses</a></li> </ul>
</div> <div class="grid_2" id="foot-c2">
<h4 class="footer">About</h4> <ul class="foot-bullet">
<li><a href="http://ocw.mit.edu/about/">About OpenCourseWare</a></li>     <li><a href="http://ocw.mit.edu/about/site-statistics/">Site Stats</a></li>     <li><a href="http://ocw.mit.edu/about/ocw-stories/">OCW Stories</a></li>     <li><a href="http://ocw.mit.edu/about/media-coverage/">Media Coverage</a></li>     <li><a href="http://ocw.mit.edu/about/newsletter/">Newsletter</a></li>     <li><a href="http://ocw.mit.edu/about/media-coverage/press-releases/">Press Releases</a></li> </ul>
</div> <div class="grid_2" id="foot-c3">
<h4 class="footer">Donate</h4> <ul class="foot-bullet">
<li><a href="http://ocw.mit.edu/donate">Make a Donation</a></li>     <li><a href="http://ocw.mit.edu/donate/why-donate/">Why Donate?</a></li>     <li><a href="http://ocw.mit.edu/donate/our-supporters/">Our Supporters</a></li>     <li><a href="http://ocw.mit.edu/donate/other-ways-to-contribute/">Other Ways to Contribute</a></li>     <li><a href="http://ocw.mit.edu/donate/shop-ocw/">Shop OCW</a></li>     <li><a href="http://ocw.mit.edu/support/">Become a Corporate Sponsor</a></li> </ul>
</div> <div class="grid_2" id="foot-c4">
<h4 class="footer">Featured Sites</h4> <ul class="foot-bullet">
<li><a href="http://ocw.mit.edu/high-school/">Highlights for High School</a></li>     <li><a href="http://ocw.mit.edu/educator/">OCW Educator</a></li>     <li><a href="http://ocw.mit.edu/courses/crosslinks/">MIT Crosslinks and OCW</a></li>     <li><a href="http://ocw.mit.edu/ans7870/featured/mitx-courses-on-edx.htm">MITx Courses on edX</a></li>     <li><a href="http://teachingexcellence.mit.edu/">Teaching Excellence at MIT</a></li>     <li><a href="http://www.oeconsortium.org/">Open Education Consortium</a></li> </ul>
<h4 style="margin-top: 14px;" class="footer">Tools</h4> <ul class="foot-bullet">
<li><a href="http://ocw.mit.edu/help/">Help &amp; FAQs</a></li>     <li><a href="../../../common/jsp/feedback.htm">Contact Us</a></li>     <li><a href="../../../common/search/AdvancedSearch.htm">Advanced Search</a></li>     <li><a href="http://ocw.mit.edu/help/site-map/">Site Map</a></li>     <li><a href="../../../common/terms/index.htm">Privacy &amp; Terms of Use</a></li>     <li><a href="http://ocw.mit.edu/help/rss/">RSS Feeds</a></li> </ul>
</div> <div class="grid_4 omega" id="foot-c5">
<h4 class="footer">Our Corporate Supporters</h4> <!-- HOME_CORP_LOGO_1 --> <div class="sponsors_google_ads_even" id="div-gpt-ad-1388181177156-0"><script type="text/javascript">
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-0'); });
</script></div> <!-- HOME_CORP_LOGO_2 --> <div class="sponsors_google_ads_odd" id="div-gpt-ad-1388181177156-1"><script type="text/javascript">
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-1'); });
</script></div> <!-- HOME_CORP_LOGO_3 --> <div class="sponsors_google_ads_even" id="div-gpt-ad-1388181177156-2"><script type="text/javascript">
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-2'); });
</script></div> <!-- HOME_CORP_LOGO_4 --> <div class="sponsors_google_ads_odd" id="div-gpt-ad-1388181177156-3"><script type="text/javascript">
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-3'); });
</script></div> <!-- HOME_CORP_LOGO_5 --> <div class="sponsors_google_ads_even" id="div-gpt-ad-1388181177156-4"><script type="text/javascript">
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-4'); });
</script></div> <!-- HOME_CORP_LOGO_6 --> <div class="sponsors_google_ads_odd" id="div-gpt-ad-1388181177156-5"><script type="text/javascript">
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-5'); });
</script></div>
</div> <div class="grid_12 alpha omega" style="border-top: thin solid #d5c9ba; padding-top: 24px; margin-bottom: 10px; text-align: center;"><p style="font-family: TitilliumText22LRegular,Verdana; text-align: center; font-size: 1.1em;">Support for <span style="letter-spacing: 0.5px;"><strong>MIT OPENCOURSEWARE'S 15th anniversary</strong></span> is provided by <a href="http://www.sapientnitro.com/en-us.html#home"><img style="width: 145px; height: 35px; vertical-align: middle; margin-left: 7px;" alt="SapientNitro logo and nameplate." src="../../../common/images/logo_sapient.png"></a></p></div> <div itemtype="http://schema.org/CollegeOrUniversity" itemscope="" itemprop="publisher" class="grid_12 alpha omega">
<h4 style="border-top: thin solid #d5c9ba; padding-top: 10px; margin-bottom: 10px;" class="footer">About <span itemprop="name">MIT OpenCourseWare</span>
</h4> <p itemprop="description" style="color: #999; font-size: 1em; line-height: 1.5em; margin-top: 10px;">MIT OpenCourseWare makes the materials used in the teaching of almost all of MIT's subjects available on the Web, free of charge. With more than 2,200 courses available, OCW is delivering on the promise of open sharing of knowledge. <a href="http://ocw.mit.edu/about/">Learn more »</a></p>
</div> <div style="border-top: none;" class="grid_12 alpha omega" id="foot-copy">
<a href="http://web.mit.edu"><img style="width: 195; height: 44;" alt="Massachusetts Institute of Technology logo and name." src="../../../common/images/logo_mit.png"></a><a href="http://odl.mit.edu"><img style="width: 289; height: 54; vertical-align: top;" alt="MIT Office of Digital Learning logo and name." src="http://ocw.mit.edu/images/logo_odl.png"></a><a href="http://www.oeconsortium.org/"><img style="width: 219px; height: 59px; vertical-align: top;" alt="Open Education Consortium logo." src="http://ocw.mit.edu/images/logo_oec.png"></a><a itemprop="useRightsUrl" rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img style="width: 126px; height: 44px; margin-right: 0; margin-left: 13px;" alt="Creative Commons logo with terms BY-NC-SA." src="../../../common/images/cc_by-nc-sa.png"></a> <p class="copyright">© 2001–2015<br> Massachusetts Institute of Technology</p> <p style="font-size: 0.9em; margin-bottom: 15px;">Your use of the MIT OpenCourseWare site and materials is subject to our <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons License</a> and other <a rel="cc:morePermissions" href="../../../common/terms/index.htm">terms of use</a>.</p>
</div>
</div>
</div></div> <!--googleon: index-->
</div>

</div>





                
			</div> <!-- bottom grid end -->
		</div>
<!-- bottom end -->
		
		
   </body>
</html>
