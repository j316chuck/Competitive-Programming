/*ID: j316chuck
PROG: CF2B
LANG: C++
 */

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <ctime>
#include <climits>
#include <cstdlib>

const double Pi=acos(-1.0);
typedef long long LL;

#define Set(a, s) memset(a, s, sizeof (a))
#define Rd(r) freopen(r, "r", stdin)
#define Wt(w) freopen(w, "w", stdout)

using namespace std;

pair<int, int> dp[1010][1010];
bool up[1010][1010];

int main(){

    freopen("CF_2B.in", "r", stdin);
    int n;
    cin>>n;
    vector< vector< pair<int, int> > > G;
    for(int i = 0; i < n; i++){
        vector< pair<int, int> > temp;
        for(int j = 0; j < n; j++){
            int a, b, c;
            cin>>a;
            int counter1 = 0, counter2 = 0;
            b = a, c = a;
            while(b%2 == 0){
                b = b/2;
                counter1++;
            }while(c%5 == 0){
                c = c/2;
                counter2++;
            }
            temp.push_back(make_pair(counter1, counter2));
        }
        G.push_back(temp);
    }
    /*for(int i = 0; i < n; i++){
        for(int j = 0; j < n;j++){
            cout<<G[i][j].first<<' ';
        }cout<<endl;
    }*/

    memset(dp, 0x3f, sizeof(dp));
    memset(up, 0, sizeof(up));
    for(int i = 1; i <= n; i++){
        dp[i][0].first = 0; dp[0][i].first = 0;
        dp[i][0].second = 0; dp[0][i].second = 0;
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            if(min(dp[i-1][j].first, dp[i-1][j].second) <=
               min(dp[i][j-1].first, dp[i][j-1].second)){
                dp[i][j].first = dp[i-1][j].first;
                dp[i][j].second = dp[i-1][j].second;
                up[i][j] = true;
            }else{
                dp[i][j].first = dp[i][j-1].second;
                dp[i][j].second = dp[i][j-1].second;
                up[i][j] = false;
            }
            dp[i][j].first+=G[i-1][j-1].first;
            dp[i][j].second+=G[i-1][j-1].second;
        }
    }
    cout<<min(dp[n][n].first, dp[n][n].second)<<endl;
    string str = "";
    int r = n, c = n;
    while(r!=1 && c!=1){
        if(up[r][c]){
            str+='D';
        }else{
            str+='R';
        }
    }
    cout<<<<endl;
}
